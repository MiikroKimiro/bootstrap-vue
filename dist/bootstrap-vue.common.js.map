{"version":3,"file":"bootstrap-vue.common.js","sources":["../lib/mixins/link.js","../lib/components/modal.vue","../lib/components/pagination.vue","../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/utils/warn.js","../lib/components/alert.vue","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-toolbar.vue","../lib/components/button-group.vue","../lib/mixins/clickout.js","../lib/mixins/dropdown.js","../lib/components/button-group-dropdown.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-item-button.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/nav-text.vue","../lib/components/nav-form.vue","../lib/mixins/popover.js","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["import warn from '../utils/warn';\r\n// Props compatible with vue-router\r\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\r\nexport const props = {\r\n    active: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n\r\n    activeClass: {\r\n        type: String,\r\n        default: \"active\"\r\n    },\r\n\r\n    append: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n\r\n    disabled: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n\r\n    event: {\r\n        type: [String, Array],\r\n        default: \"click\"\r\n    },\r\n\r\n    exact: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n\r\n    exactActiveClass: {\r\n        type: String,\r\n        default: \"active\"\r\n    },\r\n\r\n    href: {\r\n        type: String,\r\n        default: \"#\"\r\n    },\r\n\r\n    rel: {\r\n        type: String,\r\n        default: null\r\n    },\r\n\r\n    replace: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n\r\n    routerTag: {\r\n        type: String,\r\n        default: \"a\"\r\n    },\r\n\r\n    tag: {\r\n        type: String,\r\n        default: null\r\n    },\r\n\r\n    target: {\r\n        type: String,\r\n        default: \"_self\"\r\n    },\r\n\r\n    to: {\r\n        type: [String, Object],\r\n        default: null\r\n    }\r\n};\r\n\r\nexport const computed = {\r\n    linkProps() {\r\n        return Object.keys(props).reduce((memo, prop) => {\r\n            memo[prop] = this[prop];\r\n\r\n            return memo;\r\n        }, {});\r\n    },\r\n\r\n    isRouterLink() {\r\n        return Boolean(this.$router && this.to && !this.disabled);\r\n    },\r\n\r\n    _href() {\r\n        if (this.disabled) {\r\n            return \"#\";\r\n        }\r\n\r\n        // If href explicitly provided\r\n        if (this.href) {\r\n            return this.href;\r\n        }\r\n\r\n        // Fallback to `to` prop\r\n        if (this.to && typeof this.to === \"string\") {\r\n            return this.to;\r\n        }\r\n    },\r\n\r\n    computedRel() {\r\n        if (this.target === \"_blank\" && this.rel === null) {\r\n            return \"noopener\";\r\n        }\r\n        return this.rel || null;\r\n    },\r\n\r\n    componentTag(){\r\n        if (this.tag) {\r\n            warn('<b-link> \"tag\" property is deprecated, please use \"routerTag\" property instead.');\r\n\r\n            return this.tag;\r\n        }\r\n\r\n        return this.routerTag;\r\n    },\r\n\r\n    linkClassObject() {\r\n        return [\r\n            this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\r\n            this.disabled ? \"disabled\" : null\r\n        ];\r\n    }\r\n};\r\n\r\nexport const methods = {\r\n    linkClick(e) {\r\n        if (!this.disabled) {\r\n            this.$root.$emit(\"clicked::link\", this);\r\n            this.$emit(\"click\", e);\r\n        } else {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        if (!this.isRouterLink && this._href === \"#\") {\r\n            // stop scroll-to-top behavior\r\n            e.preventDefault();\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    props,\r\n    computed,\r\n    methods\r\n};\r\n\r\nexport function pickLinkProps(...propsToPick) {\r\n    return Object.keys(props).reduce((memo, prop) => {\r\n        if (propsToPick.includes(prop)) {\r\n            memo[prop] = props[prop];\r\n        }\r\n\r\n        return memo;\r\n    }, {});\r\n}\r\n\r\nexport function omitLinkProps(...propsToOmit) {\r\n    return Object.keys(props).reduce((memo, prop) => {\r\n        if (!propsToOmit.includes(prop)) {\r\n            memo[prop] = props[prop];\r\n        }\r\n\r\n        return memo;\r\n    }, {});\r\n}\r\n","<template>\r\n    <div>\r\n        <transition-group enter-class=\"hidden\"\r\n                          enter-to-class=\"\"\r\n                          enter-active-class=\"\"\r\n                          @after-enter=\"focusFirst\"\r\n                          leave-class=\"show\"\r\n                          leave-active-class=\"\"\r\n                          leave-to-class=\"hidden\"\r\n        >\r\n            <div :class=\"['modal',{fade: !noFade, show: is_visible}]\"\r\n                 :id=\"id || null\"\r\n                 role=\"dialog\"\r\n                 ref=\"modal\"\r\n                 key=\"modal\"\r\n                 v-show=\"is_visible\"\r\n                 @click=\"onClickOut()\"\r\n                 @keyup.esc=\"onEsc()\"\r\n            >\r\n\r\n                <div :class=\"['modal-dialog','modal-'+size]\">\r\n                    <div class=\"modal-content\"\r\n                         tabindex=\"-1\"\r\n                         role=\"document\"\r\n                         ref=\"content\"\r\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '__BV_title_')\"\r\n                         :aria-describedby=\"id ? (id + '__BV_body_') : null\"\r\n                         @click.stop\r\n                    >\r\n\r\n                        <header class=\"modal-header\" ref=\"header\" v-if=\"!hideHeader\">\r\n                            <slot name=\"modal-header\">\r\n                                <h5 class=\"modal-title\" :id=\"id ? (id + '__BV_title_') : null\">\r\n                                    <slot name=\"modal-title\">{{title}}</slot>\r\n                                </h5>\r\n                                <button type=\"button\"\r\n                                        v-if=\"!hideHeaderClose\"\r\n                                        class=\"close\"\r\n                                        :aria-label=\"headerCloseLabel\"\r\n                                        @click=\"hide\"\r\n                                >\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </slot>\r\n                        </header>\r\n\r\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '__BV_body_') : null\">\r\n                            <slot></slot>\r\n                        </div>\r\n\r\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\r\n                            <slot name=\"modal-footer\">\r\n                                <b-btn v-if=\"!okOnly\"\r\n                                       variant=\"secondary\"\r\n                                       :size=\"buttonSize\"\r\n                                       @click=\"hide(false)\"\r\n                                ><slot name=\"modal-cancel\">{{ closeTitle }}</slot></b-btn>\r\n                                <b-btn variant=\"primary\"\r\n                                       :size=\"buttonSize\"\r\n                                       :disabled=\"okDisabled\"\r\n                                       @click=\"hide(true)\"\r\n                                ><slot name=\"modal-ok\">{{ okTitle }}</slot></b-btn>\r\n                            </slot>\r\n                        </footer>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div key=\"modal-backdrop\"\r\n                 :class=\"['modal-backdrop',{fade: !noFade, show: is_visible}]\"\r\n                 v-if=\"is_visible\"\r\n            ></div>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .hidden {\r\n        opacity: 0 !important;\r\n    }\r\n\r\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\r\n    .modal {\r\n        display: block;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import bBtn from './button.vue';\r\n\r\n    const FOCUS_SELECTOR = [\r\n        'button:not([disabled])',\r\n        'input:not([disabled])',\r\n        'select:not([disabled])',\r\n        'textarea:not([disabled])',\r\n        'a:not([disabled]):not(.disabled)',\r\n        '[tabindex]:not([disabled]):not(.disabled)'\r\n    ].join(',');\r\n\r\n    // Determine if an HTML element is visible - Faster than CSS check\r\n    function isVisible(el) {\r\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\r\n    }\r\n    \r\n    // Find the first visible element contained in a given root element\r\n    function findFirstVisible(root, selector) {\r\n        if (!root || !root.querySelectorAll || !selector) {\r\n            return null;\r\n        }\r\n        let els = Array.prototype.slice.call(root.querySelectorAll(selector));\r\n\r\n        // IE 10 & 11 do not support native array.find()\r\n        // So we try native find first, then fall back to a loop\r\n        let el = els.find ? els.find(el => isVisible(el)) : null;\r\n        for (let i = 0; !el && i < els.length; i++) {\r\n            if (isVisible(els[i])) {\r\n                el = els[i];\r\n            }\r\n        }\r\n        return el;\r\n    }\r\n\r\n    export default {\r\n        components: {bBtn},\r\n        data() {\r\n            return {\r\n                is_visible: false,\r\n                return_focus: this.returnFocus || null\r\n            };\r\n        },\r\n        model: {\r\n            prop: 'visible',\r\n            event: 'change'\r\n        },\r\n        computed: {\r\n            body() {\r\n                if (typeof document !== 'undefined') {\r\n                    return document.querySelector('body');\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            visible(new_val, old_val) {\r\n                if (new_val === old_val) {\r\n                    return;\r\n                }\r\n\r\n                if (new_val) {\r\n                    this.show();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            buttonSize: {\r\n                type: String,\r\n                default: 'md'\r\n            },  \r\n            noFade: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noCloseOnBackdrop: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noCloseOnEsc: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noAutoFocus: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            okOnly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            okDisabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideHeaderClose: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            visible: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnFocus: {\r\n                default: null\r\n            },\r\n            headerCloseLabel: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            closeTitle: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            okTitle: {\r\n                type: String,\r\n                default: 'OK'\r\n            }\r\n        },\r\n        methods: {\r\n            show() {\r\n                if (this.is_visible) {\r\n                    return;\r\n                }\r\n                this.$emit('show');\r\n                this.is_visible = true;\r\n                this.$root.$emit('shown::modal', this.id);\r\n                this.body.classList.add('modal-open');\r\n                this.$emit('shown');\r\n                this.$emit('change', true);\r\n                if (typeof document !== 'undefined') {\r\n                    // Guard against infinite focus loop\r\n                    document.removeEventListener('focusin', this.enforceFocus, false);\r\n                    // Handle constrained focus\r\n                    document.addEventListener('focusin', this.enforceFocus, false);\r\n                }\r\n            },\r\n            hide(isOK) {\r\n                if (!this.is_visible) {\r\n                    return;\r\n                }\r\n\r\n                // Create event object\r\n                let canceled = false;\r\n                const e = {\r\n                    isOK,\r\n                    cancel() {\r\n                        canceled = true;\r\n                    }\r\n                };\r\n\r\n                // Emit events\r\n                this.$emit('change', false);\r\n                this.$emit('hide', e);\r\n\r\n                if (isOK === true) {\r\n                    this.$emit('ok', e);\r\n                } else if (isOK === false) {\r\n                    this.$emit('cancel', e);\r\n                }\r\n\r\n                // Hide if not canceled\r\n                if (!canceled) {\r\n                    if (typeof document !== 'undefined') {\r\n                        // Remove focus handler\r\n                        document.removeEventListener('focusin', this.enforceFocus, false);\r\n                        // Return focus to original button/trigger element if provided\r\n                        this.returnFocusTo();\r\n                    }\r\n                    this.is_visible = false;\r\n                    this.$root.$emit('hidden::modal', this.id);\r\n                    this.$emit('hidden', e);\r\n                    this.body.classList.remove('modal-open');\r\n                }\r\n            },\r\n            onClickOut() {\r\n                // If backdrop clicked, hide modal\r\n                if (this.is_visible && !this.noCloseOnBackdrop) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            onEsc() {\r\n                // If ESC pressed, hide modal\r\n                if (this.is_visible && !this.noCloseOnEsc) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            focusFirst() {\r\n                // Don't try and focus if we are SSR\r\n                if (typeof document !== 'undefined') {\r\n                    return;\r\n                }\r\n\r\n                // If activeElement is child of content, no need to change focus\r\n                if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\r\n                    return;\r\n                }\r\n\r\n                let el;\r\n                if (!this.noAutoFocus) {\r\n                    // Focus the modal's first focusable item, searching body, footer, then header\r\n                    if (this.$refs.body) {\r\n                        el = findFirstVisible(this.$refs.body, FOCUS_SELECTOR);\r\n                    }\r\n                    if (!el && this.$refs.footer) {\r\n                        el = findFirstVisible(this.$refs.footer, FOCUS_SELECTOR);\r\n                    }\r\n                    if (!el && this.$refs.header) {\r\n                        el = findFirstVisible(this.$refs.header, FOCUS_SELECTOR);\r\n                    }\r\n                }\r\n                if (!el) {\r\n                    // Focus the modal content wrapper\r\n                    el = this.$refs.content;\r\n                }\r\n                if (el && el.focus) {\r\n                    el.focus();\r\n                }\r\n            },\r\n            returnFocusTo() {\r\n                // Prrefer returnFocus prop over event specified value\r\n                let el = this.returnFocus || this.return_focus || null;\r\n\r\n                if (el) {\r\n                    if (typeof el === 'string') {\r\n                        // CSS Selector\r\n                        el = document.querySelector(el);\r\n                    }\r\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\r\n                        // Component vm reference\r\n                        el.$el.focus();\r\n                    } else if (el && typeof el.focus === 'function') {\r\n                        // Plain element\r\n                        el.focus();\r\n                    }\r\n                }\r\n            },\r\n            enforceFocus(e) {\r\n                // If focus leaves modal, bring it back\r\n                // Event Listener bound on document\r\n                if (this.is_visible &&\r\n                    document !== e.target &&\r\n                    this.$refs.content &&\r\n                    this.$refs.content !== e.target &&\r\n                    !this.$refs.content.contains(e.target)) {\r\n                    this.$refs.content.focus();\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('show::modal', (id, triggerEl) => {\r\n                if (id === this.id) {\r\n                    this.return_focus = triggerEl || null;\r\n                    this.show();\r\n                }\r\n            });\r\n\r\n            this.$root.$on('hide::modal', id => {\r\n                if (id === this.id) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n            if (this.visible === true) {\r\n                this.show();\r\n            }\r\n        },\r\n        destroyed() {\r\n            // Make sure event listener is rmoved\r\n            if (typeof document !== 'undefined') {\r\n                document.removeEventListener('focusin', this.enforceFocus, false);\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <ul :class=\"['pagination',btnSize]\"\r\n        :role=\"role\"\r\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\r\n        @focusin.self=\"focusCurrent\"\r\n        @keydown.left.prevent=\"focusPrev\"\r\n        @keydown.right.prevent=\"focusNext\"\r\n        @keydown.shift.left.prevent=\"focusFirst\"\r\n        @keydown.shift.right.prevent=\"focusLast\"\r\n    >\r\n\r\n        <!-- Goto First Page button -->\r\n        <template v-if=\"!hideGotoEndButtons\">\r\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\r\n                <span class=\"page-link\" v-html=\"firstText\"></span>\r\n            </li>\r\n            <li v-else class=\"page-item\">\r\n                <a :role=\"buttonRole\"\r\n                   class=\"page-link\"\r\n                   :aria-label=\"labelFirstPage\"\r\n                   tabindex=\"-1\"\r\n                   href=\"#\"\r\n                   @click.prevent=\"setPage($event, 1)\"\r\n                   @keydown.enter.prevent=\"setPage($event, 1)\"\r\n                   @keydown.space.prevent=\"setPage($event, 1)\"\r\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></a>\r\n            </li>\r\n        </template>\r\n\r\n        <!-- Goto Previous page button -->\r\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\r\n            <span class=\"page-link\" v-html=\"prevText\"></span>\r\n        </li>\r\n        <li v-else class=\"page-item\">\r\n            <a :role=\"buttonRole\"\r\n               class=\"page-link\"\r\n               :aria-label=\"labelPrevPage\"\r\n               tabindex=\"-1\"\r\n               href=\"#\"\r\n               @click.prevent=\"setPage($event, currentPage - 1)\"\r\n               @keydown.enter.prevent=\"setPage($event, currentPage - 1)\"\r\n               @keydown.space.prevent=\"setPage($event, currentPage - 1)\"\r\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></a>\r\n        </li>\r\n\r\n        <!-- First Ellipsis Bookend -->\r\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"seperator\">\r\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\r\n        </li>\r\n\r\n        <!-- Pages links -->\r\n        <li v-for=\"page in pageList\"\r\n            :class=\"pageItemClasses(page)\"\r\n            :key=\"page.number\"\r\n        >\r\n            <a :role=\"buttonRole\"\r\n               :class=\"pageLinkClasses(page)\"\r\n               :disabled=\"disabled\"\r\n               :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n               :aria-label=\"labelPage + ' ' + page.number\"\r\n               :aria-current=\"isActive(page) ? 'true' : 'false'\"\r\n               :aria-posinset=\"page.number\"\r\n               :aria-setsize=\"numberOfPages\"\r\n               tabindex=\"-1\"\r\n               @click.prevent=\"setPage($event, page.number)\"\r\n               @keydown.enter.prevent=\"setPage($event, page.number)\"\r\n               @keydown.space.prevent=\"setPage($event, page.number)\"\r\n            >{{ page.number }}</a>\r\n        </li>\r\n\r\n        <!-- Last Ellipsis Bookend -->\r\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"seperator\">\r\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\r\n        </li>\r\n\r\n        <!-- Goto Next page -->\r\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\r\n            <span class=\"page-link\" v-html=\"nextText\"></span>\r\n        </li>\r\n        <li v-else class=\"page-item\">\r\n            <a :role=\"buttonRole\"\r\n               class=\"page-link\"\r\n               :aria-label=\"labelNextPage\"\r\n               tabindex=\"-1\"\r\n               @click.prevent=\"setPage($event, currentPage + 1)\"\r\n               @keydown.enter.prevent=\"setPage($event, currentPage + 1)\"\r\n               @keydown.space.prevent=\"setPage($event, currentPage + 1)\"\r\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></a>\r\n        </li>\r\n\r\n        <!-- Goto Last page -->\r\n        <template v-if=\"!hideGotoEndButtons\">\r\n            <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\r\n                <span class=\"page-link\" v-html=\"lastText\"></span>\r\n            </li>\r\n            <li v-else class=\"page-item\">\r\n                <a :role=\"buttonRole\"\r\n                   class=\"page-link\"\r\n                   :aria-label=\"labelLastPage\"\r\n                   tabindex=\"-1\"\r\n                   @click.prevent=\"setPage($event, numberOfPages)\"\r\n                   @keydown.enter.prevent=\"setPage($event, numberOfPages)\"\r\n                   @keydown.space.prevent=\"setPage($event, numberOfPages)\"\r\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></a>\r\n            </li>\r\n        </template>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\n// Determine if an HTML element is visible - Faster than CSS check\r\nfunction isVisible(el) {\r\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\r\n}\r\n\r\n// Make an aray of N to N+X\r\nfunction makePageArray(startNum, numPages) {\r\n    return Array.apply(null, {length: numPages}).map(function(value, index){\r\n        return { number: index + startNum, className: null };\r\n    });\r\n}\r\n\r\n// Threshold of limit size when we start/stop showing ellipsis\r\nconst ELLIPSIS_THRESHOLD = 3;\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            showFirstDots: false,\r\n            showLastDots: false,\r\n            currentPage: this.value\r\n        };\r\n    },\r\n    computed: {\r\n        numberOfPages() {\r\n            const result = Math.ceil(this.totalRows / this.perPage);\r\n            return (result < 1) ? 1 : result;\r\n        },\r\n        btnSize() {\r\n            return this.size ? `pagination-${this.size}` : '';\r\n        },\r\n        pageList() {\r\n            // Sanity checks\r\n            if (this.currentPage > this.numberOfPages) {\r\n              this.currentPage = this.numberOfPages;\r\n            } else if (this.currentPage < 1) {\r\n              this.currentPage = 1;\r\n            }\r\n\r\n            // - Hide first ellipsis marker\r\n            this.showFirstDots = false;\r\n            // - Hide last ellipsis marker\r\n            this.showLastDots = false;\r\n\r\n            let numLinks = this.limit;\r\n            let startNum = 1;\r\n\r\n            if (this.numberOfPages <= this.limit) {\r\n                // Special Case: Less pages available than the limit of displayed pages\r\n                numLinks = this.numberOfPages;\r\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\r\n                // We are near the beginning of the page list\r\n                if (!this.hideEllipsis) {\r\n                    numLinks = this.limit - 1;\r\n                    this.showLastDots = true;\r\n                }\r\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\r\n                // We are near the end of the list\r\n                if (!this.hideEllipsis) {\r\n                    this.showFirstDots = true;\r\n                    numLinks = this.limit - 1;\r\n                }\r\n                startNum = this.numberOfPages - numLinks + 1;\r\n            } else {\r\n                // We are somewhere in the middle of the page list\r\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\r\n                    this.showFirstDots = true;\r\n                    this.showLastDots = true;\r\n                    numLinks = this.limit - 2;\r\n                }\r\n                startNum = this.currentPage - Math.floor(numLinks / 2);\r\n            }\r\n\r\n            // Sanity checks\r\n            if (startNum < 1) {\r\n                startNum = 1;\r\n            } else if (startNum > (this.numberOfPages - numLinks)) {\r\n                startNum = this.numberOfPages - numLinks + 1;\r\n            }\r\n\r\n            // Generate list of page numbers\r\n            const pages = makePageArray(startNum, numLinks);\r\n\r\n            // We limit to a total of 3 page buttons on small screens\r\n            // Ellipsis will also be hidden on small screens\r\n            if (pages.length > 3) {\r\n                const idx = this.currentPage - startNum;\r\n                if (idx === 0) {\r\n                    // Keep leftmost 3 buttons visible\r\n                    for (i = 3; i < pages.length; i++) {\r\n                        pages[i].className = 'hidden-xs-down';\r\n                    }\r\n                } else if (idx === pages.length - 1) {\r\n                    // Keep rightmost 3 buttons visible\r\n                    for (i = 0; i < pages.length - 3; i++) {\r\n                        pages[i].className = 'hidden-xs-down';\r\n                    }\r\n                } else {\r\n                    // hide left button(s)\r\n                    for (i = 0; i < idx - 1; i++) {\r\n                        pages[i].className = 'hidden-xs-down';\r\n                    }\r\n                    // hide right button(s)\r\n                    for (i = pages.length - 1; i > idx + 1; i--) {\r\n                        pages[i].className = 'hidden-xs-down';\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return pages;\r\n        }\r\n    },\r\n    methods: {\r\n        isActive(page) {\r\n            return page === this.currentPage;\r\n        },\r\n        pageItemClasses(page) {\r\n            const active = this.isActive(page.number);\r\n            return [\r\n                'page-item',\r\n                this.disabled ? 'disabled' : '',\r\n                active ? 'active' : '',\r\n                page.className\r\n            ];\r\n        },\r\n        pageLinkClasses(page) {\r\n            const active = this.isActive(page.number);\r\n            return [\r\n                'page-link',\r\n                this.disabled ? 'disabled' : '',\r\n                active ? 'active' : ''\r\n            ];\r\n        },\r\n        setPage(e, num) {\r\n            if (this.disabled) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n            if (num > this.numberOfPages) {\r\n                this.currentPage = this.numberOfPages;\r\n            } else if (num < 1) {\r\n                this.currentpage = 1;\r\n            } else {\r\n                this.currentPage = num;\r\n            }\r\n            this.$nextTick(() => {\r\n                // Keep the current button focused if possible\r\n                if (isVisible(e.target) && e.target.focus) {\r\n                    e.target.focus();\r\n                } else {\r\n                    this.focusCurrent();\r\n                }\r\n            });\r\n            this.$emit('change', this.currentPage);\r\n        },\r\n        getButtons() {\r\n            const buttons = Array.prototype.slice.call(this.$el.querySelectorAll('a.page-link'));\r\n            // Return only buttons that are visible\r\n            return buttons.filter(btn => isVisible(btn));\r\n        },\r\n        setBtnFocus(btn) {\r\n            this.$nextTick(() => {\r\n                btn.focus();\r\n            });\r\n        },\r\n        focusFirst() {\r\n            const btn = this.getButtons().find(el => !el.disabled);\r\n            if (btn && btn.focus && btn !== document.activeElement) {\r\n                this.setBtnFocus(btn);\r\n            }\r\n        },\r\n        focusLast() {\r\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\r\n            if (btn && btn.focus && btn !== document.activeElement) {\r\n                this.setBtnFocus(btn);\r\n            }\r\n        },\r\n        focusCurrent() {\r\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\r\n            if (btn && btn.focus) {\r\n                this.setBtnFocus(btn);\r\n            } else {\r\n                // Fallback if current page is not in button list\r\n                this.focusFirst();\r\n            }\r\n        },\r\n        focusPrev() {\r\n            const buttons = this.getButtons();\r\n            const idx = buttons.indexOf(document.activeElement);\r\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\r\n                this.setBtnFocus(buttons[idx - 1]);\r\n            }\r\n        },\r\n        focusNext() {\r\n            const buttons = this.getButtons();\r\n            const idx = buttons.indexOf(document.activeElement);\r\n            const cnt = buttons.length - 1;\r\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\r\n                this.setBtnFocus(buttons[idx + 1]);\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        currentPage(newPage, oldPage) {\r\n            if (newPage !== oldPage) {\r\n                this.$emit('input', newPage);\r\n            }\r\n        },\r\n        value(newValue, oldValue) {\r\n            if (newValue !== oldValue) {\r\n                this.currentPage = newValue;\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        value: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        limit: {\r\n            type: Number,\r\n            default: 5\r\n        },\r\n        perPage: {\r\n            type: Number,\r\n            default: 20\r\n        },\r\n        totalRows: {\r\n            type: Number,\r\n            default: 20\r\n        },\r\n        size: {\r\n            type: String,\r\n            default: 'md'\r\n        },\r\n        hideGotoEndButtons: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        ariaLabel: {\r\n            type: String,\r\n            default: 'Pagination'\r\n        },\r\n        labelFirstPage: {\r\n            type: String,\r\n            default: 'Goto first page'\r\n        },\r\n        firstText: {\r\n            type: String,\r\n            default: '&laquo'\r\n        },\r\n        labelPrevPage: {\r\n            type: String,\r\n            default: 'Goto previous page'\r\n        },\r\n        prevText: {\r\n            type: String,\r\n            default: '&lsaquo;'\r\n        },\r\n        labelNextPage: {\r\n            type: String,\r\n            default: 'Goto next page'\r\n        },\r\n        nextText: {\r\n            type: String,\r\n            default: '&rsaquo;'\r\n        },\r\n        labelLastPage: {\r\n            type: String,\r\n            default: 'Goto last page'\r\n        },\r\n        lastText: {\r\n            type: String,\r\n            default: '&raquo;'\r\n        },\r\n        labelPage: {\r\n            type: String,\r\n            default: 'Goto page'\r\n        },\r\n        hideEllipsis: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        ellipsisText: {\r\n            type: String,\r\n            default: '&hellip;'\r\n        },\r\n        role: {\r\n            type: String,\r\n            default: 'group'\r\n        },\r\n        buttonRole: {\r\n            type: String,\r\n            default: 'button'\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    .page-item {\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n    }\r\n    .page-item.disabled {\r\n        cursor: not-allowed;\r\n        opacity: .65;\r\n    }\r\n</style>\r\n","/**\r\n * Observe a DOM element changes, falls back to eventListener mode\r\n * @param {Element} el The DOM element to observe\r\n * @param {Function} callback callback to be called on change\r\n * @param {object} [opts={childList: true, subtree: true}] observe options\r\n * @see http://stackoverflow.com/questions/3219758\r\n */\r\nexport default function observeDOM(el, callback, opts) {\r\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n    const eventListenerSupported = window.addEventListener;\r\n\r\n    if (MutationObserver) {\r\n        // Define a new observer\r\n        const obs = new MutationObserver(mutations => {\r\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n        // Have the observer observe foo for changes in children\r\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\r\n    } else if (eventListenerSupported) {\r\n        el.addEventListener('DOMNodeInserted', callback, false);\r\n        el.addEventListener('DOMNodeRemoved', callback, false);\r\n    }\r\n}\r\n","const all_listen_types = {hover: true, click: true, focus: true};\r\n\r\nexport default function targets(el, binding, listen_types, fn) {\r\n    const vm = el.__vue__;\r\n\r\n    if (!vm) {\r\n        console.warn('__vue__ is not available on element', el);\r\n        return [];\r\n    }\r\n\r\n    const targets = Object.keys(binding.modifiers || {})\r\n        .filter(t => !all_listen_types[t]);\r\n\r\n    if (binding.value) {\r\n        targets.push(binding.value);\r\n    }\r\n\r\n    const listener = () => {\r\n        fn({targets, vm});\r\n    };\r\n\r\n    Object.keys(all_listen_types).forEach(type => {\r\n        if (listen_types[type] || binding.modifiers[type]) {\r\n            el.addEventListener(type, listener);\r\n        }\r\n    });\r\n    \r\n    // Return the list of targets\r\n    return targets;\r\n}\r\n","const inBrowser = typeof window !== 'undefined';\r\nconst isServer = !inBrowser;\r\n\r\n/*\r\n * Pollyfill for Element.closest() for IE :(\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\r\n */\r\n\r\nif (inBrowser && window.Element && !Element.prototype.closest) {\r\n    Element.prototype.closest = function (s) {\r\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\r\n        let el = this;\r\n        let i;\r\n        do {\r\n            i = matches.length;\r\n            // eslint-disable-next-line no-empty\r\n            while (--i >= 0 && matches.item(i) !== el) {\r\n            }\r\n        } while ((i < 0) && (el = el.parentElement));\r\n        return el;\r\n    };\r\n}\r\n\r\n/*\r\n * Constants / Defaults\r\n */\r\n\r\nconst NAME = 'v-b-scrollspy';\r\nconst EVENT = 'scrollspy::activate';\r\nconst BVSS = '__BV_ScrollSpy__';\r\n\r\nconst Default = {\r\n    element: 'body',\r\n    offset: 10,\r\n    method: 'auto',\r\n    throttle: 200\r\n};\r\n\r\nconst DefaultType = {\r\n    element: '(string|element)',\r\n    offset: 'number',\r\n    method: 'string',\r\n    throttle: 'number'\r\n};\r\n\r\nconst ClassName = {\r\n    DROPDOWN_ITEM: 'dropdown-item',\r\n    DROPDOWN_MENU: 'dropdown-menu',\r\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\r\n    NAV_LINK: 'nav-link',\r\n    LIST_ITEM: 'list-group-item',\r\n    ACTIVE: 'active'\r\n};\r\n\r\nconst Selector = {\r\n    ACTIVE: '.active',\r\n    NAV_LIST_GROUP: '.nav, .list-group',\r\n    NAV: '.nav',\r\n    LIST_GROUP: '.list-group',\r\n    NAV_LINKS: '.nav-link',\r\n    LIST_ITEMS: '.list-group-item',\r\n    DROPDOWN: '.dropdown',\r\n    DROPDOWN_ITEMS: '.dropdown-item',\r\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\r\n};\r\n\r\nconst OffsetMethod = {\r\n    OFFSET: 'offset',\r\n    POSITION: 'position'\r\n};\r\n\r\n/*\r\n * DOM Utility Methods\r\n */\r\n\r\nfunction isElement(obj) {\r\n    return obj.nodeType;\r\n}\r\n\r\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\r\nfunction closest(element, selector) {\r\n    const el = element.closest(selector);\r\n    return el === element ? null : el;\r\n}\r\n\r\n// Query Selector All wrapper\r\nfunction $QSA(selector, element) {\r\n    if (!element) {\r\n        element = document;\r\n    }\r\n    if (!isElement(element)) {\r\n        return [];\r\n    }\r\n    return Array.prototype.slice.call(element.querySelectorAll(selector));\r\n}\r\n\r\n// Query Selector wrapper\r\nfunction $QS(selector, element) {\r\n    if (!element) {\r\n        element = document;\r\n    }\r\n    if (!isElement(element)) {\r\n        return null;\r\n    }\r\n    return element.querySelector(selector) || null;\r\n}\r\n\r\n/*\r\n * Utility Methods\r\n */\r\n\r\n// Get Vue VM from element\r\nfunction getVm(el) {\r\n    return el ? el.__vue__ : null;\r\n}\r\n\r\n// Better var type detection\r\nfunction toType(obj) {\r\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\r\n}\r\n\r\n// Check config properties for expected types\r\nfunction typeCheckConfig(componentName, config, configTypes) {\r\n    for (const property in configTypes) {\r\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\r\n            const expectedTypes = configTypes[property];\r\n            const value = config[property];\r\n            const valueType = value && isElement(value) ? 'element' : toType(value);\r\n\r\n            if (!new RegExp(expectedTypes).test(valueType)) {\r\n                console.error(\r\n                    componentName + ': Option \"' + property + '\" provided type \"' +\r\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\n * ScrollSpy Class\r\n */\r\n\r\nfunction ScrollSpy(el, binding) {\r\n    // The element that contains the nav-links et al\r\n    this._$el = el;\r\n    // The selectors to find the nav-links\r\n    this._selector = [\r\n        Selector.NAV_LINKS,\r\n        Selector.LIST_ITEMS,\r\n        Selector.DROPDOWN_ITEMS\r\n    ].join(',');\r\n    // Start off with default configurtion\r\n    this._config = Object.assign({}, Default);\r\n    // Target HREF IDs and their offsets\r\n    this._offsets = [];\r\n    this._targets = [];\r\n    // The currently active target (as an HREF id)\r\n    this._activeTarget = null;\r\n    // Curent scroll height (for detecting document height changes)\r\n    this._scrollHeight = 0;\r\n    // Reference to the $root VM so we can spew events\r\n    this._$root = null;\r\n    // Reference to our throttled resize timeout\r\n    this._resizeTimeout = null;\r\n\r\n    // Process bindings/config\r\n    this.updateConfig(binding);\r\n}\r\n\r\n/*\r\n * ScrollSpy Public methods\r\n */\r\n\r\n// Update config\r\nScrollSpy.prototype.updateConfig = function (binding) {\r\n    // If Argument, assume element ID\r\n    if (binding.arg) {\r\n        // Element ID specified as arg. We must pre-pend #\r\n        this._config.element = '#' + binding.arg;\r\n    }\r\n\r\n    // Process modifiers\r\n    Object.keys(binding.modifiers).forEach(val => {\r\n        if (/^\\d+$/.test(val)) {\r\n            // Offest value\r\n            this._config.offset = parseInt(val, 10);\r\n        } else if (/^(auto|position|offset)$/.test(val)) {\r\n            // Offset method\r\n            this._config.method = val;\r\n        }\r\n    });\r\n\r\n    // Process value\r\n    if (typeof binding.value === 'string') {\r\n        // Value is  a CSS ID or selector\r\n        this._config.element = binding.value;\r\n    } else if (typeof binding.value === 'number') {\r\n        // Value is offset\r\n        this._config.offset = Math.round(binding.value);\r\n    } else if (typeof binding.value === 'object') {\r\n        // Value is config object\r\n        Object.keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\r\n            this._config[k] = binding.value[k];\r\n        });\r\n    }\r\n\r\n    // Check the config and log error to console. Unknown options are ignored\r\n    typeCheckConfig(NAME, this._config, DefaultType);\r\n\r\n    // Get Vue instance from element\r\n    const vm = getVm(this._$el);\r\n    if (vm && vm.$root) {\r\n        this._$root = vm.$root;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Turn on event listener\r\nScrollSpy.prototype.listen = function () {\r\n    const scroller = this._getScroller();\r\n    if (scroller) {\r\n        if (scroller.tagName !== 'BODY') {\r\n            scroller.addEventListener('scroll', this, false);\r\n        }\r\n        window.addEventListener('scroll', this, false);\r\n        window.addEventListener('orientationchange', this, false);\r\n        window.addEventListener('resize', this, false);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Turn off event listener\r\nScrollSpy.prototype.unListen = function () {\r\n    const scroller = this._getScroller();\r\n    if (scroller) {\r\n        if (scroller.tagName !== 'BODY') {\r\n            scroller.removeEventListener('scroll', this, false);\r\n        }\r\n        window.removeEventListener('scroll', this, false);\r\n        window.removeEventListener('orientationchange', this, false);\r\n        window.removeEventListener('resize', this, false);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Refresh the positions of the target IDs\r\nScrollSpy.prototype.refresh = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return this;\r\n    }\r\n\r\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\r\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\r\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\r\n\r\n    this._offsets = [];\r\n    this._targets = [];\r\n    this._scrollHeight = this._getScrollHeight();\r\n\r\n    // Find all nav link/dropdown/list-item links in our element\r\n    $QSA(this._selector, this._$el).map(el => {\r\n        const href = el.getAttribute('href');\r\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\r\n            const target = $QS(href, scroller);\r\n            if (!target) {\r\n                return null;\r\n            }\r\n            const bcr = target.getBoundingClientRect();\r\n            if (bcr.width || bcr.height) {\r\n                return {\r\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\r\n                    href\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }).filter(\r\n        item => item\r\n    ).sort(\r\n        (a, b) => a.offset - b.offset\r\n    ).forEach(item => {\r\n        this._offsets.push(item.offset);\r\n        this._targets.push(item.href);\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Handle the active target selection\r\nScrollSpy.prototype.process = function () {\r\n    if (!this._getScroller) {\r\n        return this;\r\n    }\r\n    const scrollTop = this._getScrollTop() + this._config.offset;\r\n    const scrollHeight = this._getScrollHeight();\r\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\r\n\r\n    if (this._scrollHeight !== scrollHeight) {\r\n        this.refresh();\r\n    }\r\n\r\n    if (scrollTop >= maxScroll) {\r\n        const target = this._targets[this._targets.length - 1];\r\n        if (this._activeTarget !== target) {\r\n            this._activate(target);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\r\n        this._activeTarget = null;\r\n        this._clear();\r\n        return this;\r\n    }\r\n\r\n    for (let i = this._offsets.length; i--;) {\r\n        const isActiveTarget =\r\n            this._activeTarget !== this._targets[i] &&\r\n            scrollTop >= this._offsets[i] &&\r\n            (this._offsets[i + 1] === undefined ||\r\n            scrollTop < this._offsets[i + 1]);\r\n\r\n        if (isActiveTarget) {\r\n            this._activate(this._targets[i]);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Dispose  of our stuff\r\nScrollSpy.prototype.dispose = function () {\r\n    // Ensure we are not listening to events\r\n    this.unListen();\r\n\r\n    // Garbage collection\r\n    clearTimeout(this._resizeTimeout);\r\n    this._resizeTimeout = null;\r\n    this._$el = null;\r\n    this._config = null;\r\n    this._selector = null;\r\n    this._offsets = null;\r\n    this._targets = null;\r\n    this._activeTarget = null;\r\n    this._scrollHeight = null;\r\n    this._$root = null;\r\n};\r\n\r\n/*\r\n * ScrollSpy event handler\r\n */\r\n\r\nScrollSpy.prototype.handleEvent = function (e) {\r\n    const self = this;\r\n\r\n    function resizeThrottle() {\r\n        clearTimeout(this._resizeTimeout);\r\n        this._resizeTimeout = setTimeout(() => {\r\n            self.refresh().process();\r\n        }, self._config.throttle || Default.throttle);\r\n    }\r\n\r\n    if (e.type === 'scroll') {\r\n        this.process();\r\n    } else if (e.type === 'orientationchange') {\r\n        this.refresh().process();\r\n    } else if (e.type === 'resize') {\r\n        resizeThrottle();\r\n    }\r\n};\r\n\r\n/*\r\n * ScrollSpy private methods\r\n */\r\n\r\n// Get the srolling element\r\nScrollSpy.prototype._getScroller = function () {\r\n    if (isServer) {\r\n        return null;\r\n    }\r\n    const scroller = this._config.element;\r\n    if (!scroller) {\r\n        return null;\r\n    }\r\n    if (scroller && isElement(scroller)) {\r\n        return scroller;\r\n    } else if (typeof scroller === 'string') {\r\n        if (scroller === 'body') {\r\n            return document.body;\r\n        }\r\n        // Otherwise assume CSS selector\r\n        return $QS(scroller);\r\n    }\r\n    return null;\r\n};\r\n\r\n// Return the scroller top position\r\nScrollSpy.prototype._getScrollTop = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\r\n};\r\n\r\n// Return the scroller height\r\nScrollSpy.prototype._getScrollHeight = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ?\r\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\r\n        scroller.scrollHeight;\r\n};\r\n\r\n// Return the scroller offset top position\r\nScrollSpy.prototype._getOffsetHeight = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\r\n};\r\n\r\n// Activate the scrolled in target nav-link\r\nScrollSpy.prototype._activate = function (target) {\r\n    this._activeTarget = target;\r\n    this._clear();\r\n\r\n    let queries = this._selector.split(',');\r\n    queries = queries.map(selector => {\r\n        return selector + '[href=\"' + target + '\"]';\r\n    });\r\n\r\n    const links = $QSA(queries.join(','), this._$el);\r\n\r\n    links.forEach(link => {\r\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\r\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\r\n            const dropdown = closest(link, Selector.DROPDOWN);\r\n            if (dropdown) {\r\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\r\n                if (toggle) {\r\n                    this._setActiveState(toggle, true);\r\n                }\r\n            }\r\n            // Also set this link's state\r\n            this._setActiveState(link, true);\r\n        } else {\r\n            // Set triggered link as active\r\n            this._setActiveState(link, true);\r\n            // Set triggered links parents as active\r\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\r\n            // Handle parent .nav's and .list-group's\r\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\r\n        }\r\n    });\r\n\r\n    // Signal event to root, passing ID of target\r\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\r\n        this._$root.$emit(EVENT, target);\r\n    }\r\n};\r\n\r\n// Clear the 'active' targets in our nav component\r\nScrollSpy.prototype._clear = function () {\r\n    $QSA(this._selector, this._$el).filter(el => {\r\n        if (el.classList.contains(ClassName.ACTIVE)) {\r\n            const href = el.getAttribute('href');\r\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }).forEach(el => {\r\n        this._setActiveState(el, false);\r\n    });\r\n};\r\n\r\n// Set the active state. if el has a vue insatnce then try setting the active prop,\r\n// Else fallback to adding the active class\r\nScrollSpy.prototype._setActiveState = function (el, state) {\r\n    if (el) {\r\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\r\n            // Special case where VM with 'active' prop is on parent element\r\n            el = el.parentElement;\r\n        }\r\n        const vm = getVm(el);\r\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\r\n            // This is a component that has an `active` prop\r\n            vm.$props.active = state;\r\n        } else {\r\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\r\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\r\n        }\r\n    }\r\n};\r\n\r\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\r\n// And then set the active state on each immediate previous sibling of the parent(s)\r\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\r\n    if (!classes) {\r\n        return;\r\n    }\r\n    if (!Array.isArray(classes)) {\r\n        classes = [classes];\r\n    }\r\n    let el = element;\r\n    while (el) {\r\n        el = closest(el, selector);\r\n        if (el && el.previousElementSibling) {\r\n            for (let i = 0; i < classes.length - 1; i++) {\r\n                if (el.previousElementSibling.classList.contains(classes[i])) {\r\n                    this._setActiveState(el, state);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/*\r\n * Export our directive\r\n */\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        if (isServer || el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS] = new ScrollSpy(el, binding);\r\n    },\r\n    inserted(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).listen().refresh().process();\r\n    },\r\n    update(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).refresh().process();\r\n    },\r\n    componentUpdated(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).refresh().process();\r\n    },\r\n    unbind(el) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        // Remove scroll event listener on scrollElId\r\n        el[BVSS].unListen().dispose();\r\n        el[BVSS] = null;\r\n    }\r\n};\r\n","export default function(message) {\r\n    console.warn(`[Bootstrap-Vue warn]: ${message}`);\r\n}\r\n","<template>\r\n    <div v-if=\"localShow\"\r\n         :class=\"classObject\"\r\n         role=\"alert\"\r\n         aria-live=\"polite\"\r\n         aria-atomic=\"true\"\r\n    >\r\n        <button type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"alert\"\r\n                aria-label=\"dismissLabel\"\r\n                v-if=\"dismissible\"\r\n                @click.stop.prevent=\"dismiss\"\r\n        >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import warn from '../utils/warn';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                countDownTimerId: null,\r\n                dismissed: false\r\n            };\r\n        },\r\n        created() {\r\n            if (this.state) {\r\n                warn('<b-alert> \"state\" property is deprecated, please use \"variant\" property instead.');\r\n            }\r\n        },\r\n        computed: {\r\n            classObject() {\r\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\r\n            },\r\n            alertVariant() {\r\n                const variant = this.state || this.variant || 'info';\r\n                return `alert-${variant}`;\r\n            },\r\n            localShow() {\r\n                return !this.dismissed && (this.countDownTimerId || this.show);\r\n            }\r\n        },\r\n        props: {\r\n            variant: {\r\n                type: String,\r\n                default: 'info'\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            dismissible: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dismissLabel: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            show: {\r\n                type: [Boolean, Number],\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            show() {\r\n                this.showChanged();\r\n            }\r\n        },\r\n        mounted() {\r\n            this.showChanged();\r\n        },\r\n        methods: {\r\n            dismiss() {\r\n                this.dismissed = true;\r\n                this.$emit('dismissed');\r\n                this.clearCounter();\r\n            },\r\n            clearCounter() {\r\n                if (this.countDownTimerId) {\r\n                    clearInterval(this.countDownTimerId);\r\n                }\r\n            },\r\n            showChanged() {\r\n                // Reset dismiss status\r\n                this.dismissed = false;\r\n\r\n                // No timer for boolean values\r\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\r\n                    return;\r\n                }\r\n\r\n                let dismissCountDown = this.show;\r\n                this.$emit('dismiss-count-down', dismissCountDown);\r\n\r\n                // Start counter\r\n                this.clearCounter();\r\n                this.countDownTimerId = setInterval(() => {\r\n                    if (dismissCountDown < 2) {\r\n                        return this.dismiss();\r\n                    }\r\n                    dismissCountDown--;\r\n                    this.$emit('dismiss-count-down', dismissCountDown);\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <!-- When VueRouter is available -->\r\n    <a v-if=\"isRouterLink\"\r\n       is=\"router-link\"\r\n       :active-class=\"activeClass\"\r\n       :exact-active-class=\"exactActiveClass\"\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :to=\"to\"\r\n       :exact=\"exact\"\r\n       :append=\"append\"\r\n       :replace=\"replace\"\r\n       :event=\"event\"\r\n       :tag=\"componentTag\"\r\n       :class=\"linkClassObject\"\r\n       @click.native=\"linkClick\">\r\n        <slot></slot>\r\n    </a>\r\n\r\n    <!-- Fallback mode -->\r\n    <a v-else\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :href=\"_href\"\r\n       :target=\"target || null\"\r\n       :rel=\"computedRel\"\r\n       :class=\"linkClassObject\"\r\n       @click=\"linkClick\">\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\nimport linkMixin from '../mixins/link';\r\n\r\nexport default {\r\n    mixins: [linkMixin]\r\n};\r\n</script>\r\n","<template>\r\n    <ol class=\"breadcrumb\">\r\n        <li v-for=\"normalizedItem in normalizedItems\"\r\n            :class=\"['breadcrumb-item', normalizedItem.active ? 'active' : null]\"\r\n            @click=\"onClick(normalizedItem._originalItem)\"\r\n            role=\"presentation\">\r\n            <span v-if=\"normalizedItem.active\"\r\n                  :aria-current=\"ariaCurrent\"\r\n                  v-html=\"normalizedItem.text\"></span>\r\n            <b-link v-else\r\n                    v-bind=\"normalizedItem._linkProps\"\r\n                    v-html=\"normalizedItem.text\"></b-link>\r\n        </li>\r\n        <slot></slot>\r\n    </ol>\r\n</template>\r\n\r\n<script>\r\nimport bLink from './link.vue';\r\nimport { props as linkProps } from '../mixins/link';\r\nconst bLinkPropKeys = Object.keys(linkProps);\r\n\r\nexport default {\r\n    components: { bLink },\r\n    computed: {\r\n        normalizedItems() {\r\n            let userDefinedActive = false;\r\n            const originalItemsLength = this.items.length;\r\n\r\n            return this.items.map((item, index) => {\r\n                let normalizedItem = { _originalItem: item };\r\n                // if no active state is defined,\r\n                // default to the last item in the array as active\r\n                const isLast = index === originalItemsLength - 1;\r\n\r\n                // nothing defined except the text\r\n                if (typeof item === 'string') {\r\n                    Object.assign(normalizedItem, { text: item, link: '#', active: isLast });\r\n                } else {\r\n                    Object.assign(normalizedItem, item);\r\n                }\r\n\r\n                // don't default the active state if given a boolean value,\r\n                // or if a user defined value has already been given\r\n                if (normalizedItem.active !== true && normalizedItem.active !== false && !userDefinedActive) {\r\n                    normalizedItem.active = isLast;\r\n                } else if (normalizedItem.active) {\r\n                    // here we know we've been given an active value,\r\n                    // so we won't set a default value\r\n                    userDefinedActive = true;\r\n                }\r\n\r\n                if (normalizedItem.link) {\r\n                    // default the link value to bLink's href prop\r\n                    normalizedItem.href = normalizedItem.link;\r\n                }\r\n\r\n                // stuff all the bLink props into a single place\r\n                // so we can bind to the component\r\n                // for dynamic prop proxying\r\n                normalizedItem._linkProps = Object.keys(normalizedItem).reduce((memo, itemProp) => {\r\n                    if (bLinkPropKeys.includes(itemProp)) {\r\n                        memo[itemProp] = normalizedItem[itemProp];\r\n                    }\r\n\r\n                    return memo;\r\n                }, {});\r\n\r\n                return normalizedItem;\r\n            });\r\n        }\r\n    },\r\n    props: {\r\n        items: {\r\n            type: Array,\r\n            default: () => [],\r\n            required: true\r\n        },\r\n        ariaCurrent: {\r\n            type: String,\r\n            default: 'location'\r\n        }\r\n    },\r\n    methods: {\r\n        onClick(item) {\r\n            this.$emit('click', item);\r\n        }\r\n    }\r\n};\r\n</script>\r\n","<template>\r\n    <button v-bind=\"conditionalLinkProps\"\r\n            :is=\"componentType\"\r\n            :class=\"classList\"\r\n            :type=\"btnType\"\r\n            :disabled=\"disabled\"\r\n            @click=\"onClick\">\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\nimport bLink from './link.vue';\r\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\r\n\r\n// Grab a fresh object of link props (omitLinkProps does this)\r\n// less the 'href' and 'to' props\r\n// that we will reconstruct without any defaults\r\n// so our computed 'componentType' functions properly\r\nconst linkProps = Object.assign(omitLinkProps('href', 'to'), {\r\n    href: { type: originalLinkProps.href.type },\r\n    to: { type: originalLinkProps.to.type }\r\n});\r\n\r\nexport default {\r\n    components: { bLink },\r\n    computed: {\r\n        linkProps: computed.linkProps,\r\n        classList() {\r\n            return [\r\n                'btn',\r\n                this.btnVariant,\r\n                this.btnSize,\r\n                this.btnBlock,\r\n                this.btnDisabled\r\n            ];\r\n        },\r\n        componentType() {\r\n            return (this.href || this.to) ? 'b-link' : 'button';\r\n        },\r\n        btnBlock() {\r\n            return this.block ? `btn-block` : '';\r\n        },\r\n        btnVariant() {\r\n            return this.variant ? `btn-${this.variant}` : `btn-secondary`;\r\n        },\r\n        btnSize() {\r\n            return this.size ? `btn-${this.size}` : '';\r\n        },\r\n        btnDisabled() {\r\n            return this.disabled ? 'disabled' : '';\r\n        },\r\n        btnType() {\r\n            return (this.href || this.to) ? null : this.type; \r\n        },\r\n        conditionalLinkProps() {\r\n            return this.componentType === 'button' ? {} : this.linkProps;\r\n        }\r\n    },\r\n    // merge our prepared link props with button props\r\n    props: Object.assign(linkProps, {\r\n        block: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        size: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        variant: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        type: {\r\n            type: String,\r\n            default: 'button'\r\n        }\r\n    }),\r\n    methods: {\r\n        onClick(e) {\r\n            if (this.disabled) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            } else {\r\n                this.$emit('click', e);\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\"\r\n         role=\"toolbar\"\r\n         :tabindex=\"keyNav ? '0' : null\"\r\n         @focusin.self=\"focusFirst\"\r\n         @keydown.left=\"focusNext($event,true)\"\r\n         @keydown.up=\"focusNext($event,true)\"\r\n         @keydown.right=\"focusNext($event,false)\"\r\n         @keydown.down=\"focusNext($event,false)\"\r\n         @keydown.shift.left=\"focusFirst($event)\"\r\n         @keydown.shift.up=\"focusFirst($event)\"\r\n         @keydown.shift.right=\"focusLast($event)\"\r\n         @keydown.shift.down=\"focusLast($event)\"\r\n    >\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const ITEM_SELECTOR = [\r\n        '.btn:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        '.form-control:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'select:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"checkbox\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"radio\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n    ].join(',');\r\n\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-toolbar',\r\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            justify: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            KeyNav: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            setItemFocus(item) {\r\n                this.$nextTick(() => {\r\n                    item.focus();\r\n                });\r\n            },\r\n            focusNext(e, prev) {\r\n                if (!this.keyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length < 1) {\r\n                    return;\r\n                }\r\n                let index = items.indexOf(e.target);\r\n                if (prev && index > 0) {\r\n                    index--;\r\n                } else if (!prev && index < items.length - 1) {\r\n                    index++;\r\n                }\r\n                if (index < 0) {\r\n                    index = 0;\r\n                }\r\n                this.setItemFocus(items[index]);\r\n            },\r\n            focusFirst(e) {\r\n                if (!this.keyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    this.setItemFocus(items[0]);\r\n                }\r\n            },\r\n            focusLast(e) {\r\n                if (!this.keyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    this.setItemFocus([items.length - 1]);\r\n                }\r\n            },\r\n            getItems() {\r\n                const items = Array.prototype.slice.call(this.$el.querySelectorAll(ITEM_SELECTOR));\r\n                items.forEach(item => {\r\n                    // Ensure tabfocus is -1 on any new elements\r\n                    item.tabIndex = -1;\r\n                });\r\n                return items;\r\n            }\r\n        },\r\n        mounted() {\r\n            if (this.keyNav) {\r\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\r\n                this.getItems();\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-group',\r\n                    this.vertical ? 'btn-group-vertical' : '',\r\n                    (this.justify && !this.vertical) ? 'justify-content-between' : '',\r\n                    this.size ? ('btn-group-' + this.size) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            vertical: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            justify: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\r\n    mounted() {\r\n        if (typeof document !== 'undefined') {\r\n            document.documentElement.addEventListener('click', this._clickOutListener);\r\n        }\r\n    },\r\n    destroyed() {\r\n        if (typeof document !== 'undefined') {\r\n            document.removeEventListener('click', this._clickOutListener);\r\n        }\r\n    },\r\n    methods: {\r\n        _clickOutListener(e) {\r\n            if (!this.$el.contains(e.target)) {\r\n                if (this.clickOutListener) {\r\n                    this.clickOutListener();\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","const ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])';\r\nconst HEADER_SELECTOR = '.dropdown-header:not([style*=\"display: none\"]):not([style*=\"display:none\"])';\r\nconst ALL_SELECTOR = [ITEM_SELECTOR, HEADER_SELECTOR].join(',');\r\n\r\nexport default {\r\n    props: {\r\n        split: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        dropup: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        right: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    created() {\r\n        const listener = el => {\r\n            if (el !== this) {\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        // To keep one dropdown opened on page\r\n        this.$root.$on('shown::dropdown', listener);\r\n\r\n        // Hide when clicked on links\r\n        this.$root.$on('clicked::link', listener);\r\n    },\r\n    watch: {\r\n        visible(state, old) {\r\n            if (state === old) {\r\n                return; // Avoid duplicated emits\r\n            }\r\n\r\n            if (state) {\r\n                this.$root.$emit('shown::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we add extra\r\n                 empty mouseover listeners to the body's immediate children;\r\n                 only needed because of broken event delegation on iOS\r\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.addEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            } else {\r\n                this.$root.$emit('hidden::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we remove the extra\r\n                 empty mouseover listeners we added for iOS support\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.removeEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        noop() {\r\n            // Do nothing event handler (used in visible watch)\r\n        },\r\n        toggle() {\r\n            if (this.disabled) {\r\n                this.visible = false;\r\n                return;\r\n            }\r\n            this.visible = !this.visible;\r\n            if (this.visible) {\r\n                this.$nextTick(function () {\r\n                    // Focus first visible non-disabled item\r\n                    let item = this.getFirstItem();\r\n                    if (item) {\r\n                        this.focusItem(0, [item]);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        onTab() {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n            }\r\n        },\r\n        onEsc(e) {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.$nextTick(function () {\r\n                    // Return focus to original trigger button\r\n                    let el;\r\n                    if (this.split && this.$refs.toggle) {\r\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\r\n                    } else {\r\n                        el = this.$refs.button.$el || this.$refs.button;\r\n                    }\r\n                    if (el && el.focus) {\r\n                        el.focus();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        focusNext(e, up) {\r\n            if (!this.visible) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            const items = this.getItems();\r\n            if (items.length < 1) {\r\n                return;\r\n            }\r\n            let index = items.indexOf(e.target);\r\n            if (up && index > 0) {\r\n                index--;\r\n            } else if (!up && index < items.length - 1) {\r\n                index++;\r\n            }\r\n            if (index < 0) {\r\n                index = 0;\r\n            }\r\n            this.focusItem(index, items);\r\n        },\r\n        focusHovered(e) {\r\n            if (!this.visible) {\r\n                return;\r\n            }\r\n            const items = this.getItems();\r\n            if (items.length < 1) {\r\n                return;\r\n            }\r\n            const index = items.indexOf(e.target);\r\n            if (index > -1) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.focusItem(index, items);\r\n            }\r\n        },\r\n        focusItem(idx, items) {\r\n            items.forEach((el, i) => {\r\n                if (i === idx) {\r\n                    el.classList.add('active');\r\n                    el.focus();\r\n                } else {\r\n                    el.classList.remove('active');\r\n                }\r\n            });\r\n        },\r\n        getItems() {\r\n            // Get all items and headers\r\n            return Array.prototype.slice.call(this.$refs.menu.querySelectorAll(ALL_SELECTOR));\r\n        },\r\n        getFirstItem() {\r\n            // Get the first non-header non-disabled item\r\n            let item = this.$refs.menu.querySelector(ITEM_SELECTOR);\r\n            if (!item) {\r\n                // If no items then try a header\r\n                item = this.$refs.menu.querySelector(HEADER_SELECTOR);\r\n            }\r\n            return item || null;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :id=\"id || null\" :class=\"['btn-group','dropdown', {dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"id ? (id + '__BV_button_') : null\"\r\n                  :aria-expanded=\"visible ? 'true' : 'false'\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n                  @kedown.space.stop.prevent=\"click\"\r\n                  @kedown.enter.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n             @mouseover=\"focusHovered($event)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\" role=\"group\">\r\n        <slot name=\"left\">\r\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\r\n        </slot>\r\n\r\n        <slot></slot>\r\n\r\n        <slot name=\"right\">\r\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'input-group',\r\n                    this.size ? ('input-group-' + this.size) : '',\r\n                    this.state ? ('has-' + this.state) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            left: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            right: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-addon\" :id=\"id || null\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-btn\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\r\n        <!-- Card Image Slot-->\r\n        <slot name=\"img\" ref=\"img\">\r\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\r\n        </slot>\r\n\r\n        <!-- Card Header-->\r\n        <component v-if=\"header || $slots['header']\"\r\n                   :is=\"headerTag\"\r\n                   :class=\"['card-header', headerVariant?('bg-'+headerVariant):'', headerClass]\"\r\n        >\r\n            <slot name=\"header\">\r\n                <div v-html=\"header\"></div>\r\n            </slot>\r\n        </component>\r\n\r\n        <!--Show custom block when no-block prop is set-->\r\n        <template v-if=\"noBlock\">\r\n            <slot></slot>\r\n        </template>\r\n\r\n        <!-- Card Standard Blocks-->\r\n        <div :class=\"blockClass\" v-else>\r\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\r\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Card Footer-->\r\n        <component v-if=\"footer || $slots['footer']\"\r\n                   :is=\"footerTag\"\r\n                   :class=\"['card-footer', footerVariant?('bg-'+footerVariant):'', footerClass]\"\r\n        >\r\n            <slot name=\"footer\">\r\n                <div v-html=\"footer\"></div>\r\n            </slot>\r\n        </component>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            blockClass() {\r\n                return [\r\n                    'card-block',\r\n                    this.overlay ? 'card-img-overlay' : null\r\n                ];\r\n            },\r\n            cardVariant() {\r\n                return this.variant ? `card-${this.variant}` : null;\r\n            },\r\n            cardInverse() {\r\n                if (this.overlay || this.inverse) {\r\n                    return 'card-inverse';\r\n                }\r\n                // Auto inverse colored cards\r\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\r\n                    this.variant.indexOf('outline') === -1) {\r\n                    return 'card-inverse';\r\n                }\r\n            },\r\n            cardAlign() {\r\n                return this.align ? `text-${this.align}` : null;\r\n            }\r\n        },\r\n        props: {\r\n            align: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inverse: {\r\n                type: Boolean,\r\n                // It should remain null for auto inverse\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Header\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            headerVariant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            headerClass: {\r\n                type: [String, Array],\r\n                default: ''\r\n            },\r\n            headerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Footer\r\n            footer: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            footerVariant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            footerClass: {\r\n                type: [String, Array],\r\n                default: ''\r\n            },\r\n            footerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Main block\r\n            title: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            subTitle: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            noBlock: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // Image\r\n            img: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            imgAlt: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            overlay: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" :class=\"['card-' + type]\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            type() {\r\n                if (this.deck) {\r\n                    return 'deck';\r\n                }\r\n\r\n                if (this.columns) {\r\n                    return 'columns';\r\n                }\r\n\r\n                return 'group';\r\n            }\r\n        },\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n            deck: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            columns: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"carousel slide\"\r\n         role=\"region\"\r\n         :id=\"id || null\"\r\n         :style=\"{background,height}\"\r\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\r\n         @mouseenter=\"pause\"\r\n         @mouseleave=\"start\"\r\n         @focusin=\"pause\"\r\n         @focusout=\"restart($event)\"\r\n         @keydown.left.stop.prevent=\"prev\"\r\n         @keydown.right.stop.prevent=\"next\"\r\n    >\r\n\r\n        <!-- Wrapper for slides -->\r\n        <div class=\"carousel-inner\"\r\n             role=\"list\"\r\n             :id=\"id ? (id + '__BV_inner_') : null\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Controls -->\r\n        <template v-if=\"controls\">\r\n            <a class=\"carousel-control-prev\"\r\n               href=\"#\"\r\n               role=\"button\"\r\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\r\n               @click.stop.prevent=\"prev\"\r\n               @keydown.enter.stop.prevent=\"prev\"\r\n               @keydown.space.stop.prevent=\"prev\"\r\n            >\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">{{labelPrev}}</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\"\r\n               href=\"#\"\r\n               role=\"button\"\r\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\r\n               @click.stop.prevent=\"next\"\r\n               @keydown.enter.stop.prevent=\"next\"\r\n               @keydown.space.stop.prevent=\"next\"\r\n            >\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">{{labelNext}}</span>\r\n            </a>\r\n        </template>\r\n\r\n        <!-- Indicators -->\r\n        <ol class=\"carousel-indicators\"\r\n            role=\"group\"\r\n            v-show=\"indicators\"\r\n            :id=\"id ? (id + '__BV_indicators_') : null\"\r\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\r\n            :aria-label=\"(indicators && labelIndicators) ? labelIndicators : null\"\r\n            :aria-owns=\"(indicators && id) ? (id + '__BV_inner_') : null\"\r\n        >\r\n            <li v-for=\"n in slides.length\"\r\n                role=\"button\"\r\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\r\n                :tabindex=\"indicators ? '0' : '-1'\"\r\n                :class=\"{active:n-1 === index}\"\r\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\r\n                :aria-posinset=\"n\"\r\n                :aria-setsize=\"slides.length\"\r\n                :aria-label=\"labelGotoSlide + ' ' + n\"\r\n                :aria-describedby=\"slides[n-1].id || null\"\r\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\r\n                @click=\"index=n-1\"\r\n                @keydown.enter.stop.prevent=\"index=n-1\"\r\n                @keydown.space.stop.prevent=\"index=n-1\"\r\n            ></li>\r\n        </ol>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const DIRECTION = {\r\n        next: {\r\n            current: 'carousel-item-left',\r\n            next: 'carousel-item-right',\r\n            overlay: 'carousel-item-next'\r\n        },\r\n        prev: {\r\n            current: 'carousel-item-right',\r\n            next: 'carousel-item-left',\r\n            overlay: 'carousel-item-prev'\r\n        }\r\n    };\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                index: 0,\r\n                isSliding: false,\r\n                slides: []\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            labelPrev: {\r\n                type: String,\r\n                default: 'Previous Slide'\r\n            },\r\n            labelNext: {\r\n                type: String,\r\n                default: 'Next Slide'\r\n            },\r\n            labelGotoSlide: {\r\n                type: String,\r\n                default: 'Goto Slide'\r\n            },\r\n            labelIndicators: {\r\n                type: String,\r\n                default: 'Select a slide to display'\r\n            },\r\n            interval: {\r\n                type: Number,\r\n                default: 5000\r\n            },\r\n            indicators: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            controls: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            height: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            // Previous slide\r\n            prev() {\r\n                if (this.index <= 0) {\r\n                    this.index = this.slides.length - 1;\r\n                } else {\r\n                    this.index--;\r\n                }\r\n            },\r\n\r\n            // Next slide\r\n            next() {\r\n                if (typeof document !== 'undefined' && document.visibilityState && document.hidden) {\r\n                    // Don't animate when page is not visible\r\n                    return;\r\n                }\r\n                if (this.index >= this.slides.length - 1) {\r\n                    this.index = 0;\r\n                } else {\r\n                    this.index++;\r\n                }\r\n            },\r\n\r\n            // Pause auto rotation\r\n            pause() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                clearInterval(this._intervalId);\r\n                this._intervalId = null;\r\n                // Make current slide focusable for screen readers\r\n                this.slides[this.index].tabIndex = 0;\r\n            },\r\n\r\n            // Start auto rotate slides\r\n            start() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                this.slides.forEach(slide => {\r\n                    slide.tabIndex = -1;\r\n                });\r\n                this._intervalId = setInterval(() => {\r\n                    this.next();\r\n                }, this.interval);\r\n            },\r\n\r\n            // Re-Start auto rotate slides when focus leaves the carousel\r\n            restart(e) {\r\n                if (!e.relatedTarget || !this.$el.contains(e.relatedTarget)) {\r\n                    this.start();\r\n                }\r\n            }\r\n            \r\n        },\r\n        mounted() {\r\n            // Get all slides\r\n            this.slides = Array.prototype.slice.call(this.$el.querySelectorAll('.carousel-item'));\r\n\r\n            // Set first slide as active\r\n            this.slides[0].classList.add('active');\r\n            const self = this;\r\n            this.slides.forEach((slide, idx) => {\r\n                const n = idx + 1;\r\n                slide.setAttribute('aria-current', idx === 0 ? 'true' : 'false');\r\n                slide.setAttribute('aria-posinset', String(n));\r\n                slide.setAttribute('aria-setsize', String(self.slides.length));\r\n                slide.tabIndex = -1;\r\n                if (self.id) {\r\n                    slide.setAttribute('aria-controlledby', self.id + '__BV_indicator_' + n + '_');\r\n                }\r\n            });\r\n\r\n            // Auto rotate slides\r\n            this._intervalId = null;\r\n            this.start();\r\n        },\r\n        watch: {\r\n            index(val, oldVal) {\r\n                if (val === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (this.isSliding) {\r\n                    this.index = oldVal;\r\n                    return;\r\n                }\r\n\r\n                // Determine sliding direction\r\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\r\n\r\n                // Rotates\r\n                if (oldVal === 0 && val === this.slides.length - 1) {\r\n                    direction = DIRECTION.prev;\r\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\r\n                    direction = DIRECTION.next;\r\n                }\r\n\r\n                // Determine current and next slides\r\n                const currentSlide = this.slides[oldVal];\r\n                const nextSlide = this.slides[val];\r\n\r\n                if (!currentSlide || !nextSlide) {\r\n                    return;\r\n                }\r\n\r\n                // Start animating\r\n                this.isSliding = true;\r\n\r\n                nextSlide.classList.add(direction.next, direction.overlay);\r\n                currentSlide.classList.add(direction.current);\r\n\r\n                this._carouselAnimation = setTimeout(() => {\r\n                    this.$emit('slide', val);\r\n\r\n                    currentSlide.classList.remove('active');\r\n                    currentSlide.setAttribute('aria-current', 'false');\r\n                    currentSlide.setAttribute('aria-hidden', 'true');\r\n                    currentSlide.tabIndex = -1;\r\n                    currentSlide.classList.remove(direction.current);\r\n\r\n                    nextSlide.classList.add('active');\r\n                    nextSlide.setAttribute('aria-current', 'true');\r\n                    nextSlide.setAttribute('aria-hidden', 'false');\r\n                    nextSlide.tabIndex = -1;\r\n                    nextSlide.classList.remove(direction.next, direction.overlay);\r\n\r\n                    if (!this._intervalId) {\r\n                        // Focus the current slide for screen readers if not in play mode\r\n                        currentSlide.tabIndex = 0;\r\n                        this.$nextTick(() => {\r\n                            currentSlide.focus();\r\n                        });\r\n                    }\r\n\r\n                    this.isSliding = false;\r\n                }, 500);\r\n            }\r\n        },\r\n        destroyed() {\r\n            clearTimeout(this._carouselAnimation);\r\n            clearInterval(this._intervalId);\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div class=\"carousel-item\"\r\n         role=\"listitem\"\r\n         :id=\"id || null\"\r\n         :style=\"{background,height}\"\r\n    >\r\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\r\n        <div :class=\"contentClasses\">\r\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\r\n            <p v-if=\"text\" v-html=\"text\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            img: {\r\n                type: String\r\n            },\r\n            imgAlt: {\r\n                type: String\r\n            },\r\n            contentVisibleUp: {\r\n                type: String\r\n            },\r\n            caption: {\r\n                type: String\r\n            },\r\n            text: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            },\r\n            height: {\r\n                type: String\r\n            }\r\n        },\r\n        computed: {\r\n            contentClasses() {\r\n                const classes = {\r\n                    'carousel-caption': Boolean(this.caption)\r\n                };\r\n                if (this.contentVisibleUp) {\r\n                    classes['d-none'] = true;\r\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\r\n                }\r\n                return classes;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <transition\r\n            @enter=\"enter\"\r\n            @after-enter=\"clearHeight\"\r\n            @leave=\"leave\"\r\n            @after-leave=\"clearHeight\"\r\n            name=\"collapse\"\r\n    >\r\n        <div :id=\"id || null\" :class=\"classObject\" v-show=\"show\">\r\n            <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<style scoped>\r\n    .collapse-enter-active, .collapse-leave-active {\r\n        transition: all .35s ease;\r\n        overflow: hidden;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                show: this.visible\r\n            };\r\n        },\r\n        computed: {\r\n            classObject() {\r\n                return {\r\n                    'navbar-collapse': this.isNav,\r\n                    show: this.show\r\n                };\r\n            }\r\n        },\r\n        model: {\r\n            prop: 'visible',\r\n            event: 'input'\r\n        },\r\n        watch: {\r\n            visible(newVal) {\r\n                if (newVal !== this.show) {\r\n                    this.show = newVal;\r\n                    this.emitState();\r\n                }\r\n            },\r\n        },\r\n        props: {\r\n            isNav: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            id: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            accordion: { \r\n                type: String,\r\n                default: null\r\n            },\r\n            visible: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            toggle() {\r\n                this.show = !this.show;\r\n                this.emitState();\r\n            },\r\n            enter(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = '0px';\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = realHeight;\r\n            },\r\n            leave(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = realHeight;\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = '0px';\r\n            },\r\n            clearHeight(el) {\r\n                el.style.height = null;\r\n            },\r\n            emitState() {\r\n                this.$emit('input', this.show);\r\n                this.$root.$emit('collapse::toggle::state', this.id, this.show);\r\n                if (this.accordion && this.show) {\r\n                    // Tell the other collapses in this accordion to close\r\n                    this.$root.$emit('accordion::toggle', this.id, this.accordion);\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('collapse::toggle', target => {\r\n                if (target !== this.id) {\r\n                    return;\r\n                }\r\n                this.toggle();\r\n            });\r\n            this.$root.$on('accordion::toggle', (openedId, accordion) => {\r\n                if (!this.accordion || accordion !== this.accordion) {\r\n                    return;\r\n                }\r\n                if (openedId === this.id) {\r\n                    if (!this.show) {\r\n                        this.toggle();\r\n                    }\r\n                } else {\r\n                    if (this.show) {\r\n                        this.toggle();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n            this.emitState();\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :id=\"id || null\" :class=\"['dropdown','btn-group',{dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"id ? (id + '__BV_button_') : null\"\r\n                  :aria-haspopup=\"split ? null : 'true'\"\r\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split',{'btn-link': link}]\"\r\n                  v-if=\"split\"\r\n                  ref=\"toggle\"\r\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\r\n                  :aria-haspopup=\"split ? 'true' : null\"\r\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"toggle\"\r\n        >\r\n            <span class=\"sr-only\">{{toggleText}}</span>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             ref=\"menu\"\r\n             role=\"menu\"\r\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n             @mouseover=\"focusHovered($event)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n    import bButton from './button.vue';\r\n\r\n    export default {\r\n        mixins: [clickOut, dropdown],\r\n        components: {bButton},\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            toggleText: {\r\n                type: String,\r\n                default: 'Toggle Dropdown'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            link: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            },\r\n            click(e) {\r\n                if (this.disabled) {\r\n                    this.visible = false;\r\n                    return;\r\n                }\r\n\r\n                if (this.split) {\r\n                    this.$emit('click', e);\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.toggle();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <b-link class=\"dropdown-item\"\r\n            role=\"menuitem\"\r\n            v-bind=\"linkProps\"\r\n            @click=\"$emit('click', $event)\">\r\n        <slot></slot>\r\n    </b-link>\r\n</template>\r\n\r\n<script>\r\nimport { props, computed } from '../mixins/link';\r\nimport bLink from './link.vue';\r\n\r\nexport default {\r\n    components: { bLink },\r\n    props,\r\n    computed: {\r\n        linkProps: computed.linkProps\r\n    }\r\n};\r\n</script>\r\n","<template>\r\n    <button class=\"dropdown-item\"\r\n            type=\"button\"\r\n            role=\"menuitem\"\r\n            :disabled=\"disabled\"\r\n            @click=\"onClick\">\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    methods: {\r\n        onClick(e) {\r\n            this.$root.$emit(\"clicked::link\", this);\r\n            this.$emit(\"click\", e);\r\n        },\r\n    }\r\n};\r\n</script>\r\n","<template>\r\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'h6'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\r\n        <button\r\n                :id=\"id\"\r\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\r\n                role=\"button\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"show\"\r\n                @click.prevent=\"toggle($event)\"\r\n                :disabled=\"disabled\">\r\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\r\n        </button>\r\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\r\n            <li v-for=\"item in list\">\r\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                show: false,\r\n                selected: false\r\n            };\r\n        },\r\n        computed: {\r\n            btnVariant() {\r\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\r\n            },\r\n            btnSize() {\r\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\r\n            },\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            },\r\n            displayItem() {\r\n                // If zero show default message\r\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\r\n                    return this.defaultText;\r\n                }\r\n\r\n                // Show selected item\r\n                if (this.returnObject && this.model && this.model.text) {\r\n                    return this.model.text;\r\n                }\r\n\r\n                // Show text that coresponds to the model value\r\n                if (!this.returnObject && this.model) {\r\n                    let result = this.model || '';\r\n                    this.list.forEach(function (item) {\r\n                        if (item.value === this.model) {\r\n                            result = item.text;\r\n                        }\r\n                    });\r\n                    return result;\r\n                }\r\n\r\n                return '';\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            model: {\r\n                required: false\r\n            },\r\n            list: {\r\n                type: Array,\r\n                default: [],\r\n                required: true\r\n            },\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            position: {\r\n                type: String,\r\n                default: 'left'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: 'default'\r\n            },\r\n            defaultText: {\r\n                type: String,\r\n                default: 'Plase select one'\r\n            },\r\n            forceDefault: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dropup: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            toggle(e) {\r\n                // Hide an alert\r\n                this.show = !this.show;\r\n                // Dispatch an event from the current vm that propagates all the way up to its $root\r\n                if (this.show) {\r\n                    this.$root.$emit('shown:dropdown', this.id);\r\n                    e.stopPropagation();\r\n                } else {\r\n                    this.$root.$emit('hidden::dropdown', this.id);\r\n                }\r\n            },\r\n            select(item) {\r\n                // We need to set empty model to make model watchers react to it\r\n                if (this.returnObject) {\r\n                    this.model = item;\r\n                } else {\r\n                    this.model = item.value;\r\n                }\r\n                this.show = false;\r\n                // Dispatch an event from the current vm that propagates all the way up to its $root\r\n                this.$root.$emit('selected::dropdown', this.id, this.model);\r\n            }\r\n        },\r\n        created() {\r\n            const hub = this.$root;\r\n            hub.$on('hide::dropdown', function () {\r\n                this.show = false;\r\n            });\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <form :class=\"classObject\">\r\n        <slot></slot>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    computed: {\r\n        classObject() {\r\n            return [\r\n                this.inline ? 'form-inline' : ''\r\n            ];\r\n        }\r\n    },\r\n    props: {\r\n        inline: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    }\r\n};\r\n\r\n</script>\r\n","<template>\r\n    <div :class=\"['form-group','row',inputState]\"\r\n         :id=\"id || null\"\r\n         role=\"group\"\r\n         :aria-describedby=\"describedBy\"\r\n    >\r\n        <label v-if=\"label\"\r\n               :for=\"target\"\r\n               :id=\"labelId\"\r\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\r\n               v-html=\"label\"\r\n        ></label>\r\n        <div :class=\"inputLayout\" ref=\"content\">\r\n            <slot></slot>\r\n            <div v-if=\"feedback\"\r\n                 class=\"form-text form-control-feedback\"\r\n                 :id=\"feedbackId\"\r\n                 role=\"alert\"\r\n                 aria-live=\"assertive\"\r\n                 aria-atomic=\"true\"\r\n                 v-html=\"feedback\"\r\n            ></div>\r\n            <small v-if=\"description\"\r\n                   class=\"form-text text-muted\"\r\n                   :id=\"descriptionId\"\r\n                   v-html=\"description\"\r\n            ></small>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                target: null\r\n            };\r\n        },\r\n        computed: {\r\n            labelId() {\r\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\r\n            },\r\n            descriptionId() {\r\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\r\n            },\r\n            feedbackId() {\r\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\r\n            },\r\n            describedBy() {\r\n                if (this.id && (this.label || this.feedback || this.description)) {\r\n                    return [\r\n                        this.labelId,\r\n                        this.descriptionId,\r\n                        this.feedbackId\r\n                    ].filter(i => i).join(' ');\r\n                }\r\n                return null;\r\n            },\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            },\r\n            labelLayout() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\r\n            },\r\n            labelAlignClass() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\r\n            },\r\n            inputLayout() {\r\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\r\n            }\r\n        },\r\n        methods: {\r\n            updateTarget() {\r\n                if (this.for && this.$el && this.$el.querySelector('#' + this.for)) {\r\n                    return this.for;\r\n                }\r\n                const content = this.$refs.content;\r\n                if (!content) {\r\n                    return null;\r\n                }\r\n                const input = content.querySelector(this.inputSelector);\r\n                this.target = (input && input.id) ? input.id : null;\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTarget();\r\n        },\r\n        updated() {\r\n            this.updateTarget();\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            for: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            horizontal: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            labelSize: {\r\n                type: Number,\r\n                default: 3\r\n            },\r\n            labelTextAlign: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            labelSrOnly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            description: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            feedback: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inputSelector: {\r\n                type: String,\r\n                default: '[role=\"radiogroup\"],input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\r\n    computed: {\r\n        inputClass() {\r\n            return [\r\n                this.size ? `form-control-${this.size}` : null,\r\n                this.state ? `form-control-${this.state}` : null\r\n            ];\r\n        },\r\n        custom() {\r\n            return !this.plain;\r\n        }\r\n    },\r\n    props: {\r\n        name: {\r\n            type: String\r\n        },\r\n        disabled: {\r\n            type: Boolean\r\n        },\r\n        plain: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        state: {\r\n            type: String\r\n        },\r\n        size: {\r\n            type: String\r\n        },\r\n        id: {\r\n            type: String\r\n        }\r\n    }\r\n};\r\n\r\n","export default {\r\n    computed: {\r\n        checkboxClass() {\r\n            return {\r\n                'custom-control': this.custom,\r\n                'form-check-inline': this.inline\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n","<template>\r\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\r\n        <input type=\"checkbox\"\r\n               :id=\"id || null\"\r\n               :name=\"name\"\r\n               :value=\"value\"\r\n               :disabled=\"disabled\"\r\n               :class=\"[custom?'custom-control-input':null]\"\r\n               :checked=\"isChecked\"\r\n               @change=\"handleChange\">\r\n        <span class=\"custom-control-indicator\"\r\n              aria-hidden=\"true\"\r\n              v-if=\"custom\"></span>\r\n        <span :class=\"[custom?'custom-control-description':null]\">\r\n            <slot></slot>\r\n        </span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\nimport formMixin from '../mixins/form';\r\nimport formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\nexport default {\r\n    mixins: [formMixin, formCheckBoxMixin],\r\n    model: {\r\n        prop: 'checked',\r\n        event: 'change'\r\n    },\r\n    props: {\r\n        value: {\r\n            default: true\r\n        },\r\n        uncheckedValue: {\r\n            default: false\r\n        },\r\n        checked: {\r\n            default: true\r\n        }\r\n    },\r\n    computed: {\r\n        isChecked() {\r\n            return this.checked.includes(this.value);\r\n        }\r\n    },\r\n    methods: {\r\n        handleChange({ target: { checked } }) {\r\n            if (Array.isArray(this.checked)) {\r\n                if (this.isChecked) {\r\n                    this.$emit('change', this.checked.filter(x => x !== this.value));\r\n                } else {\r\n                    this.$emit('change', [...this.checked, this.value]);\r\n                }\r\n            } else {\r\n                this.$emit('change', checked ? this.value : this.uncheckedValue)\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n</script>\r\n","export default {\r\n    computed: {\r\n        formOptions() {\r\n            let options = this.options || {};\r\n\r\n            if (Array.isArray(options)) {\r\n                // Normalize flat arrays to object Array\r\n                options = options.map(option => {\r\n                    if (typeof option === 'object') {\r\n                        return {\r\n                            value: option[this.valueField],\r\n                            text: option[this.textField],\r\n                            disabled: option.disabled || false\r\n                        };\r\n                    }\r\n\r\n                    return {text: String(option), value: option || {}};\r\n                });\r\n            } else {\r\n                // Normalize Objects keys to Array\r\n                options = Object.keys(options).map(value => {\r\n                    let option = options[value] || {};\r\n\r\n                    // Resolve text\r\n                    if (typeof option !== 'object') {\r\n                        option = {text: String(option)};\r\n                    }\r\n\r\n                    // Resolve value (uses key as value if not provided)\r\n                    option.value = option[this.valueField] || value;\r\n\r\n                    return option;\r\n                });\r\n            }\r\n\r\n            return options;\r\n        },\r\n        selectedValue() {\r\n            const formOptions = this.formOptions;\r\n            for (let i = 0; i < formOptions.length; i++) {\r\n                if (formOptions[i].value === this.localValue) {\r\n                    if (this.returnObject) {\r\n                        return formOptions[i];\r\n                    }\r\n                    return formOptions[i].value;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        valueField: {\r\n            type: [String],\r\n            default: 'value'\r\n        },\r\n        textField: {\r\n            type: [String],\r\n            default: 'text'\r\n        }\r\n    },\r\n    watch: {\r\n        localValue(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.$emit('input', this.selectedValue);\r\n        },\r\n        value(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.localValue = value;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :id=\"id || null\"\r\n         :class=\"[inputClass, inputState, this.stacked?'custom-controls-stacked':'']\"\r\n         role=\"radiogroup\"\r\n    >\r\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\r\n            <input :id=\"option.id || null\"\r\n                   :class=\"custom?'custom-control-input':null\"\r\n                   ref=\"inputs\"\r\n                   type=\"radio\"\r\n                   v-model=\"localValue\"\r\n                   :value=\"option.value\"\r\n                   :name=\"option.name\"\r\n                   :disabled=\"option.disabled\"\r\n                   @change=\"$emit('change', returnObject ? option : option.value)\"\r\n            >\r\n            <span v-if=\"custom\" class=\"custom-control-indicator\" aria-hidden=\"true\"></span>\r\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import formOptionsMixin from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            }\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                default: null,\r\n                required: true\r\n            },\r\n            stacked: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <p :id=\"id || null\"\r\n       :class=\"['form-control-static',inputClass]\"\r\n       v-html=\"staticValue\"\r\n    >\r\n        <slot></slot>\r\n    </p>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n\r\n    export default {\r\n        mixins: [formMixin],\r\n        computed: {\r\n            staticValue() {\r\n                return this.formatter ? this.formatter(this.value) : this.value;\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <input v-if=\"!static\"\r\n           ref=\"input\"\r\n           :type=\"type\"\r\n           :value=\"value\"\r\n           :name=\"name\"\r\n           :id=\"id || null\"\r\n           :disabled=\"disabled\"\r\n           :readonly=\"readonly\"\r\n           :is=\"textarea?'textarea':'input'\"\r\n           :class=\"['form-control',inputClass]\"\r\n           :rows=\"rows || rowsCount\"\r\n           :placeholder=\"placeholder\"\r\n           @input=\"onInput($event.target.value)\"\r\n           @change=\"onChange($event.target.value)\"\r\n           @keyup=\"onKeyUp($event)\"\r\n           @focus=\"$emit('focus')\"\r\n           @blur=\"$emit('blur')\"\r\n    />\r\n    <b-form-input-static v-else\r\n                         :id=\"id || null\"\r\n                         :value=\"value\"\r\n                         :formatter=\"formatter\"\r\n    ></b-form-input-static>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import bFormInputStatic from './form-input-static.vue';\r\n\r\n    export default {\r\n        mixins: [formMixin],\r\n        components: {bFormInputStatic},\r\n        computed: {\r\n            rowsCount() {\r\n                return (this.value || '').toString().split('\\n').length;\r\n            }\r\n        },\r\n        methods: {\r\n            format(value) {\r\n                if (this.formatter) {\r\n                    const formattedValue = this.formatter(value);\r\n                    if (formattedValue !== value) {\r\n                        value = formattedValue;\r\n                        this.$refs.input.value = formattedValue;\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            onInput(value) {\r\n                if (!this.lazyFormatter) {\r\n                    value = this.format(value);\r\n                }\r\n                this.$emit('input', value);\r\n            },\r\n            onChange(value) {\r\n                value = this.format(value);\r\n                this.$emit('input', value);\r\n                this.$emit('change', value);\r\n            },\r\n            onKeyUp(e) {\r\n                this.$emit('keyup', e);\r\n            },\r\n            focus() {\r\n                this.$refs.input.focus();\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'text'\r\n            },\r\n            readonly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            static: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            rows: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            textarea: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            },\r\n            lazyFormatter: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :class=\"['form-control', custom?'custom-file':null, inputClass]\"\r\n         :id=\"id ? (id + '__BV_file_outer_') : null\"\r\n         @dragover.stop.prevent=\"dragover\"\r\n    >\r\n\r\n        <!-- Drop Here Target -->\r\n        <span class=\"drop-here\"\r\n              v-if=\"dragging && custom\"\r\n              @dragover.stop.prevent=\"dragover\"\r\n              @drop.stop.prevent=\"drop\"\r\n              @dragleave.stop.prevent=\"dragging=false\"\r\n              :data-drop=\"dropLabel\"\r\n        ></span>\r\n\r\n        <!-- Real Form input -->\r\n        <input type=\"file\"\r\n               ref=\"input\"\r\n               :class=\"custom ? 'custom-file-input' : ''\"\r\n               :name=\"name\"\r\n               :id=\"id || null\"\r\n               :disabled=\"disabled\"\r\n               :accept=\"accept || null\"\r\n               :multiple=\"multiple\"\r\n               :webkitdirectory=\"directory\"\r\n               :aria-describedby=\"(custom && id) ? (id + '__BV_file_control_') : null\"\r\n               @change=\"onFileChange\"\r\n        >\r\n\r\n        <!-- Overlay Labels -->\r\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\r\n              :id=\"id ? (id + '__BV_file_control_') : null\"\r\n              :data-choose=\"computedChooseLabel\"\r\n              :data-selected=\"selectedLabel\"\r\n              v-if=\"custom\"\r\n        ></span>\r\n\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control.dragging {\r\n        overflow: hidden;\r\n        filter: blur(3px);\r\n    }\r\n\r\n    .custom-file-control::after {\r\n        content: attr(data-selected);\r\n    }\r\n\r\n    .custom-file-control::before {\r\n        content: attr(data-choose);\r\n    }\r\n\r\n    .custom-file .drop-here {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, .5);\r\n        border-radius: 3px;\r\n        z-index: 99999;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .custom-file .drop-here::before {\r\n        color: white;\r\n        content: attr(data-drop);\r\n    }\r\n\r\n</style>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n\r\n    export default {\r\n        mixins: [formMixin],\r\n        data() {\r\n            return {\r\n                selectedFile: null,\r\n                dragging: false\r\n            };\r\n        },\r\n        computed: {\r\n            selectedLabel() {\r\n                if (!this.selectedFile || this.selectedFile.length === 0) {\r\n                    return this.placeholder || 'No file chosen';\r\n                }\r\n\r\n                if (this.multiple) {\r\n                    if (this.selectedFile.length === 1) {\r\n                        return this.selectedFile[0].name;\r\n                    }\r\n\r\n                    return this.selectedFormat\r\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\r\n                        .replace(':count', this.selectedFile.length);\r\n                }\r\n\r\n                return this.selectedFile.name;\r\n            },\r\n            computedChooseLabel() {\r\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\r\n            }\r\n        },\r\n        watch: {\r\n            selectedFile(newVal, oldVal) {\r\n                if (newVal === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (!newVal && this.multiple) {\r\n                    this.$emit('input', []);\r\n                } else {\r\n                    this.$emit('input', newVal);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            reset() {\r\n                try {\r\n                    // Wrapped in try in case IE < 11 craps out\r\n                    this.$refs.input.value = '';\r\n                } catch (e) {\r\n                }\r\n\r\n                // IE < 11 doesn't support setting input.value to '' or null\r\n                // So we use this little extra hack to reset the value, just in case\r\n                // This also appears to work on modern browsers as well.\r\n                this.$refs.input.type = '';\r\n                this.$refs.input.type = 'file';\r\n\r\n                this.selectedFile = this.multiple ? [] : null;\r\n            },\r\n            onFileChange(e) {\r\n                // Always emit original event\r\n                this.$emit('change', e);\r\n\r\n                // Check if special `items` prop is available on event (drop mode)\r\n                // Can be disabled by setting no-traverse\r\n                const items = e.dataTransfer && e.dataTransfer.items;\r\n                if (items && !this.noTraverse) {\r\n                    const queue = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i].webkitGetAsEntry();\r\n                        if (item) {\r\n                            queue.push(this.traverseFileTree(item));\r\n                        }\r\n                    }\r\n                    Promise.all(queue).then(filesArr => {\r\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Normal handling\r\n                this.setFiles(e.target.files || e.dataTransfer.files);\r\n            },\r\n            setFiles(files) {\r\n                if (!files) {\r\n                    this.selectedFile = null;\r\n                    return;\r\n                }\r\n\r\n                if (!this.multiple) {\r\n                    this.selectedFile = files[0];\r\n                    return;\r\n                }\r\n\r\n                // Convert files to array\r\n                const filesArray = [];\r\n                for (let i = 0; i < files.length; i++) {\r\n                    if (files[i].type.match(this.accept)) {\r\n                        filesArray.push(files[i]);\r\n                    }\r\n                }\r\n\r\n                this.selectedFile = filesArray;\r\n            },\r\n            dragover(e) {\r\n                if (this.noDrop || !this.custom) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = true;\r\n                e.dataTransfer.dropEffect = 'copy';\r\n            },\r\n            drop(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = false;\r\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n                    this.onFileChange(e);\r\n                }\r\n            },\r\n            traverseFileTree(item, path) {\r\n                // Based on http://stackoverflow.com/questions/3590058\r\n                return new Promise(resolve => {\r\n                    path = path || '';\r\n                    if (item.isFile) {\r\n                        // Get file\r\n                        item.file(file => {\r\n                            file.$path = path; // Inject $path to file obj\r\n                            resolve(file);\r\n                        });\r\n                    } else if (item.isDirectory) {\r\n                        // Get folder contents\r\n                        item.createReader().readEntries(entries => {\r\n                            const queue = [];\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\r\n                            }\r\n                            Promise.all(queue).then(filesArr => {\r\n                                resolve(Array.prototype.concat.apply([], filesArr));\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            accept: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            chooseLabel: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            multiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            directory: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noTraverse: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            selectedFormat: {\r\n                type: String,\r\n                default: ':count Files'\r\n            },\r\n            noDrop: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dropLabel: {\r\n                type: String,\r\n                default: 'Drop files here'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <select :class=\"['form-control',inputClass,custom?'custom-select':null]\"\r\n            :name=\"name\"\r\n            :id=\"id || null\"\r\n            v-model=\"localValue\"\r\n            :disabled=\"disabled\"\r\n            ref=\"input\"\r\n    >\r\n        <option v-for=\"option in formOptions\"\r\n                :value=\"option.value\"\r\n                v-html=\"option.text\"\r\n                :disabled=\"option.disabled\"\r\n        ></option>\r\n    </select>\r\n</template>\r\n\r\n<script>\r\n    import formOptions from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n\r\n    export default {\r\n        mixins: [formMixin, formOptions],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                required: true\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\r\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\r\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\r\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {},\r\n        props: {\r\n            fluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            containerFluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            lead: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n<span :class=\"['badge',badgeVariant,badgePill]\">\r\n\t<slot></slot>\r\n</span>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            badgeVariant() {\r\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\r\n            },\r\n            badgePill() {\r\n                return this.pill ? 'badge-pill' : '';\r\n            }\r\n        },\r\n        props: {\r\n            variant: {\r\n                type: String,\r\n                default: 'default'\r\n            },\r\n            pill: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n            flush: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"myTag\"\r\n               :class=\"classObject\"\r\n               ref=\"item\"\r\n               v-bind=\"conditionalLinkProps\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\nimport bLink from './link.vue';\r\nimport { props as originalLinkProps, computed, omitLinkProps } from '../mixins/link'\r\n// copy link props, but exclude defaults for 'href', 'to', & 'tag'\r\n// to ensure proper component tag computation\r\nconst linkProps = Object.assign(omitLinkProps('href', 'to'), {\r\n    href: { type: originalLinkProps.href.type },\r\n    to: { type: originalLinkProps.to.type },\r\n    tag: { type: originalLinkProps.tag.type }\r\n});\r\n\r\nconst actionTags = ['a', 'router-link', 'button', 'b-link'];\r\n\r\nexport default {\r\n    components: { bLink },\r\n\r\n    computed: {\r\n        linkProps: computed.linkProps,\r\n\r\n        classObject() {\r\n            return [\r\n                'list-group-item',\r\n                this.listState,\r\n                this.active ? 'active' : null,\r\n                this.disabled ? 'disabled' : null,\r\n                this.isAction ? 'list-group-item-action' : null\r\n            ];\r\n        },\r\n\r\n        isAction() {\r\n            if (this.action === false) {\r\n                return false;\r\n            }\r\n\r\n            // this previously could return a string,\r\n            // coercing to a boolean for more consistent expected value\r\n            return !!(this.action || this.to || this.href || actionTags.includes(this.tag));\r\n        },\r\n\r\n        listState() {\r\n            return this.variant ? `list-group-item-${this.variant}` : null;\r\n        },\r\n\r\n        myTag() {\r\n            if (this.tag) {\r\n                return this.tag;\r\n            }\r\n\r\n            return (this.to || this.href) ? 'b-link' : 'div';\r\n        },\r\n\r\n        conditionalLinkProps() {\r\n            return this.myTag !== 'b-link' ? {} : this.linkProps;\r\n        }\r\n    },\r\n\r\n    // merge the link props with list-group-item props\r\n    props: Object.assign(linkProps, {\r\n        action: {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        variant: {\r\n            type: String,\r\n            default: null\r\n        },\r\n    })\r\n};\r\n</script>\r\n","<template>\r\n    <div class=\"media\">\r\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\r\n            <slot name=\"aside\"></slot>\r\n        </div>\r\n        <div class=\"media-body\">\r\n            <slot></slot>\r\n        </div>\r\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\r\n            <slot name=\"aside\"></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            verticalAlignClass() {\r\n                return `align-self-${this.verticalAlign}`;\r\n            }\r\n        },\r\n        props: {\r\n            rightAlign: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            verticalAlign: {\r\n                type: String,\r\n                default: 'top'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"type\"\r\n               :class=\"classObject\"\r\n               :role=\"isNavBar ? null : 'navigation'\"\r\n    >\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    computed: {\r\n        classObject() {\r\n            return {\r\n                nav: true,\r\n                'navbar-nav': this.isNavBar,\r\n                'nav-tabs': this.tabs,\r\n                'nav-pills': this.pills,\r\n                'flex-column': this.vertical,\r\n                'nav-fill': this.fill\r\n            };\r\n        }\r\n    },\r\n    props: {\r\n        type: {\r\n            type: String,\r\n            default: 'ul'\r\n        },\r\n        fill: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        tabs: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        pills: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        vertical: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isNavBar: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    }\r\n};\r\n\r\n</script>\r\n","<template>\r\n    <li class=\"nav-item\">\r\n        <b-link class=\"nav-link\"\r\n                v-bind=\"linkProps\"\r\n                @click=\"$emit('click', $event)\">\r\n            <slot></slot>\r\n        </b-link>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\nimport { props as linkProps, computed } from '../mixins/link';\r\nimport bLink from './link.vue';\r\n\r\nexport default {\r\n    components: { bLink },\r\n    props: linkProps,\r\n    computed: {\r\n        linkProps: computed.linkProps\r\n    }\r\n};\r\n</script>\r\n","<template>\r\n    <li :id=\"id || null\" :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\r\n\r\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\r\n           href=\"#\"\r\n           ref=\"button\"\r\n           :id=\"id ? (id + '__BV_button_') : null\"\r\n           aria-haspopup=\"true\"\r\n           :aria-expanded=\"visible ? 'true' : 'false'\"\r\n           :disabled=\"disabled\"\r\n           @click.stop.prevent=\"toggle($event)\"\r\n           @keydown.enter.stop.prevent=\"toggle($event)\"\r\n           @keydown.space.stop.prevent=\"toggle($event)\"\r\n        >\r\n            <slot name=\"text\"><span v-html=\"text\"></span></slot>\r\n        </a>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n             @mouseover=\"focusHovered($event)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <button :class=\"classObject\"\r\n            type=\"button\"\r\n            :aria-label=\"label\"\r\n            :aria-controls=\"target.id ? target.id : target\"\r\n            :aria-expanded=\"toggleState ? 'true' : 'false'\"\r\n            @click=\"onclick\"\r\n    >\r\n        <slot name=\"toggler-icon\"><span class=\"navbar-toggler-icon\"></span></slot>\r\n\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    computed: {\r\n        classObject() {\r\n            return [\r\n                'navbar-toggler',\r\n                'navbar-toggler-' + this.position\r\n            ];\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            toggleState: false\r\n        };\r\n    },\r\n    props: {\r\n        label: {\r\n            type: String,\r\n            default: 'Toggle navigation'\r\n        },\r\n        position: {\r\n            type: String,\r\n            default: 'right'\r\n        },\r\n        target: {\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        onclick() {\r\n            const target = this.target;\r\n            if (target.toggle) {\r\n                target.toggle();\r\n            }\r\n            this.$root.$emit('collapse::toggle', this.target);\r\n        }\r\n    },\r\n    created() {\r\n        this.$root.$on('collapse::toggle::state', (target, state) => {\r\n            if (target === this.target || target === this.target.id) {\r\n                this.toggleState = state;\r\n            }\r\n        });\r\n    }\r\n};\r\n</script>\r\n","<template>\r\n    <nav :class=\"classObject\">\r\n        <slot></slot>\r\n    </nav>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'navbar',\r\n                    this.type ? `navbar-${this.type}` : null,\r\n                    this.variant ? `bg-${this.variant}` : null,\r\n                    this.fixed ? `fixed-${this.fixed}` : null,\r\n                    this.sticky ? 'sticky-top' : null,\r\n                    this.toggleable ? this.toggleableClass : null\r\n                ];\r\n            },\r\n            toggleableClass() {\r\n                let className = 'navbar-toggleable';\r\n\r\n                if (this.toggleBreakpoint) {\r\n                    className += `-${this.toggleBreakpoint}`;\r\n                }\r\n\r\n                return className;\r\n            }\r\n        },\r\n        props: {\r\n            type: {\r\n                type: String,\r\n                default: 'light'\r\n            },\r\n            variant: {\r\n                type: String\r\n            },\r\n            toggleable: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            toggleBreakpoint: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            fixed: {\r\n                type: String\r\n            },\r\n            sticky: {\r\n                type: String\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <span class=\"navbar-text\">\r\n        <slot></slot>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <b-form :id=\"id || null\" inline>\r\n        <slot></slot>\r\n    </b-form>\r\n</template>\r\n\r\n<script>\r\n    import bForm from './form.vue';\r\n    \r\n    export default {\r\n        components: [bForm],\r\n        props: {\r\n            id: {\r\n                type: String,\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","import Tether from 'tether';\r\n// Controls which events are mapped for each named trigger, and the expected popover behavior for each.\r\nconst TRIGGER_LISTENERS = {\r\n    click: {click: 'toggle'},\r\n    hover: {mouseenter: 'show', mouseleave: 'hide'},\r\n    focus: {focus: 'show', blur: 'hide'}\r\n};\r\nconst PLACEMENT_PARAMS = {\r\n    top: 'bottom center',\r\n    bottom: 'top center',\r\n    left: 'middle right',\r\n    right: 'middle left'\r\n};\r\nconst TETHER_CLASS_PREFIX = 'bs-tether';\r\nconst TETHER_CLASSES = {\r\n    element: false,\r\n    enabled: false\r\n};\r\nconst TRANSITION_DURATION = 150;\r\n\r\nexport default {\r\n    props: {\r\n        constraints: {\r\n            type: Array,\r\n            default() {\r\n                return [];\r\n            }\r\n        },\r\n        debounce: {\r\n            type: [Number],\r\n            default: 300,\r\n            validator(value) {\r\n                return value >= 0;\r\n            }\r\n        },\r\n        delay: {\r\n            type: [Number, Object],\r\n            default: 0,\r\n            validator(value) {\r\n                if (typeof value === 'number') {\r\n                    return value >= 0;\r\n                } else if (value !== null && typeof value === 'object') {\r\n                    return typeof value.show === 'number' &&\r\n                        typeof value.hide === 'number' &&\r\n                        value.show >= 0 &&\r\n                        value.hide >= 0;\r\n                }\r\n                return false;\r\n            }\r\n        },\r\n        offset: {\r\n            type: String,\r\n            default: '0 0',\r\n            validator(value) {\r\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n            }\r\n        },\r\n        placement: {\r\n            type: String,\r\n            default: 'top',\r\n            validator(value) {\r\n                return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\r\n            }\r\n        },\r\n        popoverStyle: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n        show: {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n        targetOffset: {\r\n            type: String,\r\n            default: '0 0',\r\n            validator(value) {\r\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n            }\r\n        },\r\n        triggers: {\r\n            type: [Boolean, String, Array],\r\n            default: () => ['click', 'focus'],\r\n            validator(value) {\r\n                // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\r\n                if (value === false || value === '') {\r\n                    return true;\r\n                } else if (typeof value === 'string') {\r\n                    return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\r\n                } else if (Array.isArray(value)) {\r\n                    const keys = Object.keys(TRIGGER_LISTENERS);\r\n                    value.forEach(item => {\r\n                        if (keys.indexOf(item) === -1) {\r\n                            return false;\r\n                        }\r\n                    });\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            triggerState: this.show,\r\n            classState: this.show,\r\n            lastEvent: null\r\n        };\r\n    },\r\n    computed: {\r\n        /**\r\n         * Arrange event trigger hooks as array for all input types.\r\n         *\r\n         * @return Array\r\n         */\r\n        normalizedTriggers() {\r\n            if (this.triggers === false) {\r\n                return [];\r\n            } else if (typeof this.triggers === 'string') {\r\n                return [this.triggers];\r\n            }\r\n            return this.triggers;\r\n        },\r\n        /**\r\n         * Class property to be used for Popover rendering\r\n         *\r\n         * @return String\r\n         */\r\n        popoverAlignment() {\r\n            return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\r\n        },\r\n        /**\r\n         * Determine if the Popover should be shown.\r\n         *\r\n         * @return Boolean\r\n         */\r\n        showState() {\r\n            return this.show !== false && (this.triggerState || this.show);\r\n        }\r\n    },\r\n    watch: {\r\n        /**\r\n         * Refresh Tether display properties\r\n         */\r\n        constraints() {\r\n            this.setOptions();\r\n        },\r\n        /**\r\n         * Refresh Popover event triggers\r\n         * @param {Array} newTriggers\r\n         * @param {Array} oldTriggers\r\n         */\r\n        normalizedTriggers(newTriggers, oldTriggers) {\r\n            this.updateListeners(newTriggers, oldTriggers);\r\n        },\r\n        /**\r\n         * Refresh Tether display properties\r\n         */\r\n        offset() {\r\n            this.setOptions();\r\n        },\r\n        /**\r\n         * Refresh Tether display properties\r\n         */\r\n        placement() {\r\n            this.setOptions();\r\n        },\r\n        /**\r\n         * Affect 'show' state in response to status change\r\n         * @param  {Boolean} val\r\n         */\r\n        showState(val) {\r\n            const delay = this.getDelay(val);\r\n            clearTimeout(this.$data._timeout);\r\n            if (delay) {\r\n                this.$data._timeout = setTimeout(() => this.togglePopover(val), delay);\r\n            } else {\r\n                this.togglePopover(val);\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * Add all event hooks for the given trigger\r\n         * @param {String} trigger\r\n         */\r\n        addListener(trigger) {\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                this.$data._trigger.addEventListener(item, e => this.eventHandler(e));\r\n            }\r\n        },\r\n        /**\r\n         * Tidy removal of Tether object from the DOM\r\n         */\r\n        destroyTether() {\r\n            if (this.$data._tether && !this.showState) {\r\n                this.$data._tether.destroy();\r\n                this.$data._tether = null;\r\n                const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\r\n                this.$data._trigger.className = this.$data._trigger.className.replace(regx, '');\r\n            }\r\n        },\r\n        /**\r\n         * Handle multiple event triggers\r\n         * @param  {Object} e\r\n         */\r\n        eventHandler(e) {\r\n            // If this event is right after a previous successful event, ignore it (debounce)\r\n            if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\r\n                return;\r\n            }\r\n            // Look up the expected popover action for the event\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const trigger in TRIGGER_LISTENERS) {\r\n                for (const event in TRIGGER_LISTENERS[trigger]) {\r\n                    if (event === e.type) {\r\n                        const action = TRIGGER_LISTENERS[trigger][event];\r\n                        // If the expected event action is the opposite of the current state, allow it\r\n                        if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\r\n                            this.triggerState = !this.triggerState;\r\n                            this.lastEvent = e.timeStamp;\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Get the currently applicable popover delay\r\n         *\r\n         * @returns Number\r\n         */\r\n        getDelay(state) {\r\n            if (typeof this.delay === 'object') {\r\n                return state ? this.delay.show : this.delay.hide;\r\n            }\r\n            return this.delay;\r\n        },\r\n        /**\r\n         * Tether construct params for each show event.\r\n         *\r\n         * @return Object\r\n         */\r\n        getTetherOptions() {\r\n            return {\r\n                attachment: PLACEMENT_PARAMS[this.placement],\r\n                element: this.$data._popover,\r\n                target: this.$data._trigger,\r\n                classes: TETHER_CLASSES,\r\n                classPrefix: TETHER_CLASS_PREFIX,\r\n                offset: this.offset,\r\n                constraints: this.constraints,\r\n                targetOffset: this.targetOffset\r\n            };\r\n        },\r\n        /**\r\n         * Hide popover and fire event\r\n         */\r\n        hidePopover() {\r\n            this.classState = false;\r\n            clearTimeout(this.$data._timeout);\r\n            this.$data._timeout = setTimeout(() => {\r\n                this.$data._popover.style.display = 'none';\r\n                this.destroyTether();\r\n            }, TRANSITION_DURATION);\r\n        },\r\n        /**\r\n         * Refresh the Popover position in order to respond to changes\r\n         */\r\n        refreshPosition() {\r\n            if (this.$data._tether) {\r\n                this.$nextTick(() => {\r\n                    this.$data._tether.position();\r\n                });\r\n            }\r\n        },\r\n        /**\r\n         * Remove all event hooks for the given trigger\r\n         * @param {String} trigger\r\n         */\r\n        removeListener(trigger) {\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                this.$data._trigger.removeEventListener(item, e => this.eventHandler(e));\r\n            }\r\n        },\r\n        /**\r\n         * Update tether options\r\n         */\r\n        setOptions() {\r\n            if (this.$data._tether) {\r\n                this.$data._tether.setOptions(this.getTetherOptions());\r\n            }\r\n        },\r\n        /**\r\n         * Display popover and fire event\r\n         */\r\n        showPopover() {\r\n            clearTimeout(this.$data._timeout);\r\n            if (!this.$data._tether) {\r\n                this.$data._tether = new Tether(this.getTetherOptions());\r\n            }\r\n            this.$data._popover.style.display = 'block';\r\n            // Make sure the popup is rendered in the correct location\r\n            this.refreshPosition();\r\n            this.$nextTick(() => {\r\n                this.classState = true;\r\n            });\r\n        },\r\n        /**\r\n         * Handle Popover show or hide instruction\r\n         */\r\n        togglePopover(newShowState) {\r\n            this.$emit('showChange', newShowState);\r\n            if (newShowState) {\r\n                this.showPopover();\r\n                this.$root.$emit('shown::popover');\r\n            } else {\r\n                this.hidePopover();\r\n                this.$root.$emit('hidden::popover');\r\n            }\r\n        },\r\n        /**\r\n         * Study the 'triggers' component property and apply all selected triggers\r\n         * @param {Array} triggers\r\n         * @param {Array} appliedTriggers\r\n         */\r\n        updateListeners(triggers, appliedTriggers = []) {\r\n            const newTriggers = [];\r\n            const removeTriggers = [];\r\n            // Look for new events not yet mapped (all of them on first load)\r\n            triggers.forEach(item => {\r\n                if (appliedTriggers.indexOf(item) === -1) {\r\n                    newTriggers.push(item);\r\n                }\r\n            });\r\n            // Disable any removed event triggers\r\n            appliedTriggers.forEach(item => {\r\n                if (triggers.indexOf(item) === -1) {\r\n                    removeTriggers.push(item);\r\n                }\r\n            });\r\n            // Apply trigger mapping changes\r\n            newTriggers.forEach(item => this.addListener(item));\r\n            removeTriggers.forEach(item => this.removeListener(item));\r\n        }\r\n    },\r\n    created() {\r\n        this.$root.$on('hide::popover', () => {\r\n            this.triggerState = false;\r\n        });\r\n    },\r\n    mounted() {\r\n        // Configure tether\r\n        this.$data._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\r\n        this.$data._popover = this.$refs.popover;\r\n        this.$data._popover.style.display = 'none';\r\n        this.$data._tether = new Tether(this.getTetherOptions());\r\n        this.$data._timeout = 0;\r\n        // Add listeners for specified triggers and complementary click event\r\n        this.updateListeners(this.normalizedTriggers);\r\n        // Display popover if prop is set on load\r\n        if (this.showState) {\r\n            this.showPopover();\r\n        }\r\n    },\r\n    updated() {\r\n        this.refreshPosition();\r\n    },\r\n    beforeDestroy() {\r\n        this.normalizedTriggers.forEach(item => this.removeListener(item));\r\n        clearTimeout(this.$data._timeout);\r\n        this.destroyTether();\r\n    },\r\n    destroyed() {\r\n        // Tether is moving the popover element outside of Vue's control and leaking dom nodes\r\n        if (this.$data._popover.parentElement === document.body) {\r\n            document.body.removeChild(this.$data._popover);\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div>\r\n        <span ref=\"trigger\"><slot></slot></span>\r\n        <div :class=\"['popover', 'fade', classState ? 'show' : '', popoverAlignment]\"\r\n             :style=\"popoverStyle\"\r\n             tabindex=\"-1\"\r\n             ref=\"popover\"\r\n             @focus=\"$emit('focus')\"\r\n             @blur=\"$emit('blur')\"\r\n        >\r\n            <div class=\"popover-arrow\"></div>\r\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\r\n            <div class=\"popover-content\">\r\n                <div class=\"popover-content-wrapper\">\r\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import popover from '../mixins/popover';\r\n\r\n    export default {\r\n        mixins: [popover],\r\n        props: {\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            content: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            popoverStyle: {\r\n                type: Object,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div class=\"progress\">\r\n        <transition>\r\n            <div role=\"progressbar\"\r\n                 :class=\"classObject\"\r\n                 :aria-valuenow=\"value\"\r\n                 :aria-valuemin=\"0\"\r\n                 :aria-valuemax=\"max\"\r\n                 :style=\"styleObject\"\r\n            >\r\n                <slot>\r\n                    <template v-if=\"showProgress\">{{progress}}%</template>\r\n                    <template v-else-if=\"showValue\">{{value}}</template>\r\n                </slot>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    .progress-bar {\r\n        transition: all .5s;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'progress-bar',\r\n                    this.progressVariant,\r\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\r\n                    this.animated ? 'progress-bar-animated' : ''\r\n                ];\r\n            },\r\n            styleObject() {\r\n                return {\r\n                    width: this.progress + '%'\r\n                };\r\n            },\r\n            progressVariant() {\r\n                return this.variant ? `bg-${this.variant}` : null;\r\n            },\r\n            progress() {\r\n                const p = Math.pow(10, this.precision);\r\n                return Math.round((100 * p * this.value) / this.max) / p;\r\n            }\r\n        },\r\n        props: {\r\n            striped: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            animated: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            precision: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            value: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            max: {\r\n                type: Number,\r\n                default: 100\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showProgress: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            showValue: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <table :id=\"id || null\"\r\n           role=\"grid\"\r\n           :aria-busy=\"busy ? 'true' : 'false'\"\r\n           :class=\"tableClass\"\r\n    >\r\n        <thead :class=\"headClass\">\r\n            <tr role=\"row\">\r\n                <th v-for=\"field,key in fields\"\r\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\r\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\r\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\r\n                    :key=\"key\"\r\n                    :class=\"fieldClass(field,key)\"\r\n                    :style=\"field.thStyle || {}\"\r\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\r\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\r\n                    :tabindex=\"field.sortable?'0':null\"\r\n                >\r\n                  <slot :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\r\n                    <div v-html=\"field.label\"></div>\r\n                  </slot>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tfoot v-if=\"footClone\" :class=\"footClass\">\r\n            <tr role=\"row\">\r\n                <th v-for=\"field,key in fields\"\r\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\r\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\r\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\r\n                    :key=\"key\"\r\n                    :class=\"fieldClass(field,key)\"\r\n                    :style=\"field.thStyle || {}\"\r\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\r\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\r\n                    :tabindex=\"field.sortable?'0':null\"\r\n                >\r\n                  <slot v-if=\"$scopedSlots['FOOT_'+key]\" :name=\"'FOOT_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\r\n                    <div v-html=\"field.label\"></div>\r\n                  </slot>\r\n                  <slot v-else :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\r\n                    <div v-html=\"field.label\"></div>\r\n                  </slot>\r\n                </th>\r\n            </tr>\r\n        </tfoot>\r\n        <tbody>\r\n            <tr v-for=\"(item,index) in _items\"\r\n                role=\"row\"\r\n                :class=\"rowClass(item)\"\r\n                @click=\"rowClicked($event,item,index)\"\r\n                @hover=\"rowHovered($event,item,index)\"\r\n            >\r\n                <td v-for=\"(field,key) in fields\" :class=\"tdClass(field, item, key)\">\r\n                    <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\r\n                </td>\r\n            </tr>\r\n            <tr v-if=\"showEmpty && (!_items  || _items.length === 0)\" role=\"row\">\r\n                <td :colspan=\"Object.keys(fields).length\">\r\n                    <div v-if=\"filter\" role=\"alert\" aria-live=\"polite\">\r\n                        <slot name=\"emptyfiltered\">\r\n                            <div class=\"text-center my-2\" v-html=\"emptyFilteredText\"></div>\r\n                        </slot>\r\n                    </div>\r\n                    <div v-else role=\"alert\" aria-live=\"polite\">\r\n                        <slot name=\"empty\">\r\n                            <div class=\"text-center my-2\" v-html=\"emptyText\"></div>\r\n                        </slot>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n    import warn from '../utils/warn';\r\n\r\n    const toString = v => {\r\n        if (!v) {\r\n            return '';\r\n        }\r\n        if (v instanceof Object) {\r\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\r\n        }\r\n        return String(v);\r\n    };\r\n\r\n    const recToString = (obj) => {\r\n        if (!(obj instanceof Object)) {\r\n            return '';\r\n        }\r\n\r\n        // Exclude these fields from record stringification\r\n        const exclude = { state: true, _rowVariant: true };\r\n\r\n        return toString(Object.keys(obj).reduce((o, k) => {\r\n          if (!exclude[k]) {\r\n            o[k] = obj[k];\r\n          }\r\n          return o;\r\n        }, {}));\r\n    };\r\n\r\n    const defaultSortCompare = (a, b, sortBy) => {\r\n        if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') {\r\n            if (a[sortBy] < b[sortBy]) {\r\n                return -1;\r\n            } else if (a[sortBy] > b[sortBy]) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {\r\n                numeric: true\r\n            });\r\n        }\r\n    };\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                sortBy: null,\r\n                sortDesc: true,\r\n                localItems: []\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            items: {\r\n                type: [Array, Function],\r\n                default: () => {\r\n                    if (this.itemsProvider) {\r\n                        // Deprecate itemsProvider\r\n                        warn('b-table: prop items-provider has been deprecated. Pass a function to items instead');\r\n                        return this.itemsProvider;\r\n                    }\r\n                    return [];\r\n                }\r\n            },\r\n            fields: {\r\n                type: Object,\r\n                default: {}\r\n            },\r\n            striped: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            bordered: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            inverse: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            small: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            responsive: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            headVariant: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            footVariant: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            perPage: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            currentPage: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            filter: {\r\n                type: [String, RegExp, Function],\r\n                default: null\r\n            },\r\n            sortCompare: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            itemsProvider: {\r\n                // Deprecated in favour of items\r\n                type: Function,\r\n                default: null\r\n            },\r\n            noProviderPaging: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noProviderSorting: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noProviderFiltering: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            busy: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            value: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            footClone: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            labelSortAsc: {\r\n                type: String,\r\n                default: 'Click to sort Ascending'\r\n            },\r\n            labelSortDesc: {\r\n                type: String,\r\n                default: 'Click to sort Descending'\r\n            },\r\n            showEmpty: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            emptyText: {\r\n                type: String,\r\n                default: 'There are no records to show'\r\n            },\r\n            emptyFilteredText: {\r\n                type: String,\r\n                default: 'There are no records matching your request'\r\n            }\r\n        },\r\n        watch: {\r\n            items(newVal, oldVal) {\r\n                if (oldVal !== newVal) {\r\n                    this._providerUpdate();\r\n                }\r\n            },\r\n            sortDesc(newVal, oldVal) {\r\n                if (oldVal !== newVal && !this.noProviderSorting) {\r\n                    this._providerUpdate();\r\n                }\r\n            },\r\n            sortBy(newVal, oldVal) {\r\n                if (oldVal !== newVal && !this.noProviderSorting) {\r\n                    this._providerUpdate();\r\n                }\r\n            },\r\n            perPage(newVal, oldVal) {\r\n                if (oldVal !== newVal && !this.noProviderPaging) {\r\n                    this._providerUpdate();\r\n                }\r\n            },\r\n            currentPage(newVal, oldVal) {\r\n                if (oldVal !== newVal && !this.noProviderPaging) {\r\n                    this._providerUpdate();\r\n                }\r\n            },\r\n            filter(newVal, oldVal) {\r\n                if (oldVal !== newVal && !this.noProviderFiltering) {\r\n                    this._providerUpdate();\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            if (this.hasProvider) {\r\n                this._providerUpdate();\r\n            }\r\n            this.$root.$on('table::refresh', (id) => {\r\n                if (id === this.id) {\r\n                    this._providerUpdate();\r\n                }\r\n            });\r\n        },\r\n        computed: {\r\n            tableClass() {\r\n                return [\r\n                    'table',\r\n                    'b-table',\r\n                    this.striped ? 'table-striped' : '',\r\n                    this.hover ? 'table-hover' : '',\r\n                    this.inverse ? 'table-inverse' : '',\r\n                    this.bordered ? 'table-bordered' : '',\r\n                    this.responsive ? 'table-responsive' : '',\r\n                    this.small ? 'table-sm' : ''\r\n                ];\r\n            },\r\n            headClass() {\r\n                return this.headVariant ? 'thead-' + this.headVariant : '';\r\n            },\r\n            footClass() {\r\n                const variant = this.footVariant || this.headVariant || null;\r\n                return variant ? 'thead-' + variant : '';\r\n            },\r\n            hasProvider() {\r\n                return this.items instanceof Function;\r\n            },\r\n            providerFiltering() {\r\n                return Boolean(this.hasProvider && !this.noProviderFiltering);\r\n            },\r\n            providerSorting() {\r\n                return Boolean(this.hasProvider && !this.noProviderSorting);\r\n            },\r\n            providerPaging() {\r\n                return Boolean(this.hasProvider && !this.noProviderPaging);\r\n            },\r\n            context() {\r\n                return {\r\n                    perPage: this.perPage,\r\n                    currentPage: this.currentPage,\r\n                    filter: this.filter,\r\n                    sortBy: this.sortBy,\r\n                    sortDesc: this.sortDesc\r\n                };\r\n            },\r\n            _items() {\r\n                // Grab some props/data to ensure reactivity\r\n                const perPage = this.perPage;\r\n                const currentPage = this.currentPage;\r\n                const filter = this.filter;\r\n                const sortBy = this.sortBy;\r\n                const sortDesc = this.sortDesc;\r\n                const sortCompare = this.sortCompare || defaultSortCompare;\r\n\r\n                let items = this.hasProvider ? this.localItems : this.items;\r\n\r\n                if (!items) {\r\n                    this.$nextTick(this._providerUpdate);\r\n                    return [];\r\n                }\r\n\r\n                items = items.slice();\r\n\r\n                // Apply local filter\r\n                if (filter && !this.providerFiltering) {\r\n                    if (filter instanceof Function) {\r\n                        items = items.filter(filter);\r\n                    } else {\r\n                        let regex;\r\n                        if (filter instanceof RegExp) {\r\n                            regex = filter;\r\n                        } else {\r\n                            regex = new RegExp('.*' + filter + '.*', 'ig');\r\n                        }\r\n                        items = items.filter(item => {\r\n                            const test = regex.test(recToString(item));\r\n                            regex.lastIndex = 0;\r\n                            return test;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Apply local Sort\r\n                if (this.sortBy && !this.providerSorting) {\r\n                    items = items.sort((a, b) => {\r\n                        const r = sortCompare(a, b, this.sortBy);\r\n                        return this.sortDesc ? r : r * -1;\r\n                    });\r\n                }\r\n\r\n                // Apply local pagination\r\n                if (perPage && !this.providerPaging) {\r\n                    items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\r\n                }\r\n\r\n                // Update the value model with the filtered/sorted/paginated data set\r\n                this.$emit('input', items);\r\n                return items;\r\n            }\r\n        },\r\n        methods: {\r\n            fieldClass(field, key) {\r\n                return [\r\n                    field.sortable ? 'sorting' : '',\r\n                    (field.sortable && this.sortBy === key) ? 'sorting_' + (this.sortDesc ? 'desc' : 'asc') : '',\r\n                    field.variant ? ('table-' + field.variant) : '',\r\n                    field.class ? field.class : '',\r\n                    field.thClass ? field.thClass : ''\r\n                ];\r\n            },\r\n            tdClass(field, item, key) {\r\n                let cellVariant = '';\r\n                if (item._cellVariants && item._cellVariants[key]) {\r\n                    cellVariant = (this.inverse ? 'bg-' : 'table-') + item._cellVariants[key];\r\n                }\r\n                return [\r\n                    (field.variant && !cellVariant) ? ((this.inverse ? 'bg-' : 'table-') + field.variant) : '',\r\n                    cellVariant,\r\n                    field.class ? field.class : '',\r\n                    field.tdClass ? field.tdClass : ''\r\n                ];\r\n            },\r\n            rowClass(item) {\r\n                // Prefer item._rowVariant over deprecated item.state\r\n                const variant = item._rowVariant || item.state || null;\r\n                return [\r\n                    variant ? ((this.inverse ? 'bg-' : 'table-') + variant) : ''\r\n                ];\r\n            },\r\n            rowClicked(e, item, index) {\r\n                if (this.busy) {\r\n                    // If table is busy (via provider) then don't propagate\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                this.$emit('row-clicked', item, index);\r\n            },\r\n            rowHovered(e, item, index) {\r\n                if (this.busy) {\r\n                    // If table is busy (via provider) then don't propagate\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                this.$emit('row-hovered', item, index);\r\n            },\r\n            headClicked(e, field, key) {\r\n                if (this.busy) {\r\n                    // If table is busy (via provider) then don't propagate\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                let sortChanged = false;\r\n                if (!field.sortable) {\r\n                    if (this.sortBy) {\r\n                        this.sortBy = null;\r\n                        sortChanged = true;\r\n                    }\r\n                } else {\r\n                    if (key === this.sortBy) {\r\n                        // Change sorting direction on column\r\n                        this.sortDesc = !this.sortDesc;\r\n                    } else {\r\n                        // Start sorting this column descending\r\n                        this.sortBy = key;\r\n                        this.sortDesc = true;\r\n                    }\r\n                    sortChanged = true;\r\n                }\r\n                this.$emit('head-clicked', key, field);\r\n                if (sortChanged) {\r\n                    // Sorting parameters changed\r\n                    this.$emit('sort-changed', this.context);\r\n                }\r\n            },\r\n            refresh() {\r\n                // Expose refresh method\r\n                if (this.hasProvider) {\r\n                    this._providerUpdate();\r\n                }\r\n            },\r\n            _providerSetLocal(items) {\r\n                this.localItems = (items && items.length > 0) ? items.slice() : [];\r\n                this.$emit('refreshed');\r\n                this.$root.$emit('table::refreshed', this.id);\r\n            },\r\n            _providerUpdate() {\r\n                // Refresh the provider items\r\n                if (this.busy || !this.hasProvider) {\r\n                    // Don't refresh remote data if we are 'busy' or if no provider\r\n                    return;\r\n                }\r\n\r\n                // Call provider function with context and optional callback\r\n                const data = this.items(this.context, this._providerSetLocal);\r\n\r\n                if (!data) {\r\n                    // Provider is using callback\r\n                    return;\r\n                }\r\n\r\n                if (data.then && typeof data.then === 'function') {\r\n                    // Provider returned Promise\r\n                    data.then((items) => {\r\n                        this._providerSetLocal(items);\r\n                    });\r\n                } else {\r\n                    // Provider returned Array data\r\n                    this._providerSetLocal(data);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n    /* Based on https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\r\n\r\n    table.b-table > thead > tr > .sorting,\r\n    table.b-table > tfoot > tr > .sorting {\r\n        padding-right: 30px;\r\n        cursor: pointer;\r\n        position: relative;\r\n    }\r\n\r\n    table.b-table thead > tr > .sorting:before,\r\n    table.b-table thead > tr > .sorting:after,\r\n    table.b-table tfoot > tr > .sorting:before,\r\n    table.b-table thead > tr > .sorting:after {\r\n        position: absolute;\r\n        bottom: 0.9em;\r\n        display: block;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    table.b-table.table-sm > thead > tr > .sorting:before,\r\n    table.b-table.table-sm > thead > tr > .sorting:after,\r\n    table.b-table.table-sm > tfoot > tr > .sorting:before,\r\n    table.b-table.table-sm > thead > tr > .sorting:after {\r\n        bottom: 0.45em;\r\n    }\r\n\r\n    table.b-table > thead > tr > .sorting:before,\r\n    table.b-table > tfoot > tr > .sorting:before {\r\n        right: 1em;\r\n        content: \"\\2191\";\r\n    }\r\n\r\n    table.b-table > thead > tr > .sorting:after,\r\n    table.b-table > tfoot > tr > .sorting:after {\r\n        right: 0.5em;\r\n        content: \"\\2193\";\r\n    }\r\n\r\n    table.b-table > thead > tr > .sorting_asc:before,\r\n    table.b-table > thead > tr > .sorting_desc:after,\r\n    table.b-table > tfoot > tr > .sorting_asc:before,\r\n    table.b-table > tfoot > tr > .sorting_desc:after {\r\n        opacity: 1;\r\n    }\r\n\r\n    /* Busy table styling */\r\n\r\n    table.b-table[aria-busy=\"false\"] {\r\n        opacity: 1;\r\n    }\r\n\r\n    table.b-table[aria-busy=\"true\"] {\r\n        opacity: .6;\r\n    }\r\n</style>\r\n","<template>\r\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\r\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n\r\n        <div :class=\"{'card-header': card}\">\r\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\r\n                role=\"tablist\"\r\n                tabindex=\"0\"\r\n                :aria-setsize=\"tabs.length\"\r\n                :aria-posinset=\"currentTab + 1\"\r\n                @keydown.left=\"previousTab\"\r\n                @keydown.up=\"previousTab\"\r\n                @keydown.right=\"nextTab\"\r\n                @keydown.down=\"nextTab\"\r\n                @keydown.shift.left=\"setTab(-1,false,1)\"\r\n                @keydown.shift.up=\"setTab(-1,false,1)\"\r\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\r\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\r\n            >\r\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\r\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                       :href=\"tab.href\"\r\n                       role=\"tab\"\r\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\r\n                       :aria-controls=\"tab.id || null\"\r\n                       :id=\"tab.controlledBy || null\"\r\n                       @click.prevent.stop=\"setTab(index)\"\r\n                       @keydown.space.prevent.stop=\"setTab(index)\"\r\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\r\n                       tabindex=\"-1\"\r\n                       v-if=\"!tab.headHtml\"\r\n                       v-html=\"tab.title\"\r\n                    ></a>\r\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                         role=\"heading\"\r\n                         tabindex=\"-1\"\r\n                         v-else\r\n                         v-html=\"tab.headHtml\"></div>\r\n                </li>\r\n                <slot name=\"tabs\"></slot>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    import observeDom from '../utils/observe-dom';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                currentTab: this.value,\r\n                tabs: []\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n            noFade: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            card: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            small: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            value: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            pills: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            lazy: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            bottom: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            currentTab(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\r\n                this.$emit('input', val);\r\n                this.tabs[val].$emit('click');\r\n            },\r\n            value(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.setTab(val);\r\n            },\r\n            fade(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.tabs.forEach(item => {\r\n                    this.$set(item, 'fade', val);\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            fade() {\r\n                return !this.noFade;\r\n            },\r\n            navStyle() {\r\n                return this.pills ? 'pills' : 'tabs';\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Util: Return the sign of a number (as -1, 0, or 1)\r\n             */\r\n            sign(x) {\r\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\r\n            },\r\n\r\n            /**\r\n             * Move to next tab\r\n             */\r\n            nextTab() {\r\n                this.setTab(this.currentTab, false, 1);\r\n            },\r\n\r\n            /**\r\n             * Move to previous tab\r\n             */\r\n            previousTab() {\r\n                this.setTab(this.currentTab, false, -1);\r\n            },\r\n\r\n            /**\r\n             * Set active tab on the tabs collection and the child 'tab' component\r\n             */\r\n            setTab(index, force, offset) {\r\n                offset = offset || 0;\r\n\r\n                // Prevent setting same tab!\r\n                if (!force && (index + offset) === this.currentTab) {\r\n                    return;\r\n                }\r\n\r\n                const tab = this.tabs[index + offset];\r\n\r\n                // Don't go beyond indexes!\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n\r\n                // Ignore or Skip disabled\r\n                if (tab.disabled) {\r\n                    if (offset) {\r\n                        // Skip to next non disabled tab in offset direction (recursive)\r\n                        this.setTab(index, force, offset + this.sign(offset));\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // Deactivate any previous active tab(s)\r\n                this.tabs.forEach( t => {\r\n                    if (t !== tab && t.localActive) {\r\n                        this.$set(t, 'localActive', false);\r\n                    }\r\n                });\r\n\r\n                // Set new tab as active\r\n                this.$set(tab, 'localActive', true);\r\n\r\n                // Update currentTab\r\n                this.currentTab = index + offset;\r\n            },\r\n\r\n            /**\r\n             * Dynamically update tabs\r\n             */\r\n            updateTabs() {\r\n                // Probe tabs\r\n                if (this.$slots.default) {\r\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\r\n                        .map(tab => tab.componentInstance);\r\n                } else {\r\n                    this.tabs = [];\r\n                }\r\n\r\n                this.tabs.forEach(tab => {\r\n                    this.$set(tab, 'fade', this.fade);\r\n                    this.$set(tab, 'lazy', this.lazy);\r\n                });\r\n\r\n                // Get initial active tab\r\n                let tabIndex = this.currentTab;\r\n\r\n                if (tabIndex === null || tabIndex === undefined) {\r\n                    // Find last active tab in current tabs\r\n                    this.tabs.forEach((tab, index) => {\r\n                        if (tab.active) {\r\n                            tabIndex = index;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Workaround to fix problem when currentTab is removed\r\n                let offset = 0;\r\n                if (tabIndex > this.tabs.length - 1) {\r\n                    offset = -1;\r\n                }\r\n\r\n                this.setTab(tabIndex || 0, true, offset);\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTabs();\r\n\r\n            // Observe Child changes so we can notify tabs change\r\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\r\n        <component :is=\"tag\"\r\n                   :id=\"id || null\"\r\n                   role=\"tabpanel\"\r\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\r\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\r\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\r\n                   :aria-lablelledby=\"controlledBy || null\"\r\n                   v-if=\"localActive || !lazy\"\r\n                   v-show=\"localActive || lazy\"\r\n                   ref=\"panel\"\r\n        >\r\n             <slot></slot>\r\n        </component>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        methods: {\r\n            enter() {\r\n                this.show = true;\r\n            },\r\n            beforeLeave() {\r\n                this.show = false;\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                fade: false,\r\n                localActive: false,\r\n                lazy: true,\r\n                show: false\r\n            };\r\n        },\r\n        computed: {\r\n            controlledBy() {\r\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n            buttonId: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            headHtml: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div>\r\n        <span ref=\"trigger\"><slot></slot></span>\r\n        <div :class=\"['tooltip','tooltip-' + this.placement]\"\r\n             :style=\"{opacity:showState?1:0}\"\r\n             tabindex=\"-1\"\r\n             ref=\"popover\"\r\n             @focus=\"$emit('focus')\"\r\n             @blur=\"$emit('blur')\"\r\n        >\r\n            <div class=\"tooltip-inner\">\r\n                <slot name=\"content\"><span v-html=\"content\"></span></slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    .tooltip {\r\n        display: block;\r\n        transition: all 0.3s;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import popover from '../mixins/popover';\r\n\r\n    export default {\r\n        mixins: [popover],\r\n        props: {\r\n            content: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            triggers: {\r\n                type: [Boolean, String, Array],\r\n                default: 'hover'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","const inBrowser = typeof window !== 'undefined';\r\n\r\nimport target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        const targets = target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('collapse::toggle', target);\r\n            });\r\n        });\r\n        if (inBrowser && el.__vue__ && targets.length > 0) {\r\n            el.setAttribute('aria-controls', targets.join(' '));\r\n            el.setAttribute('aria-expanded', 'false');\r\n            el.__vue__.$root.$on('collapse::toggle::state', (id, state) => {\r\n                if (targets.indexOf(id) !== -1) {\r\n                    el.setAttribute('aria-expanded', state ? 'true' : 'false');\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('show::modal', target, el);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import * as components from './components';\r\nimport * as directives from './directives';\r\n\r\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\r\n\r\nconst VuePlugin = {\r\n    install: function (Vue) {\r\n        if (Vue._bootstrap_vue_installed) {\r\n            return;\r\n        }\r\n\r\n        Vue._bootstrap_vue_installed = true;\r\n\r\n        // Register components\r\n        for (var component in components) {\r\n            Vue.component(component, components[component]);\r\n        }\r\n\r\n        // Register directives\r\n        for (var directive in directives) {\r\n            Vue.directive(directive, directives[directive]);\r\n        }\r\n    }\r\n};\r\n\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n    window.Vue.use(VuePlugin);\r\n}\r\n\r\nexport default VuePlugin;\r\n"],"names":["omitLinkProps","Object","keys","props","reduce","memo","prop","propsToOmit","includes","isVisible","el","offsetWidth","offsetHeight","findFirstVisible","root","selector","querySelectorAll","let","els","Array","prototype","slice","call","find","i","length","makePageArray","startNum","numPages","apply","map","value","index","number","className","observeDOM","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","removedNodes","observe","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","modifiers","filter","t","all_listen_types","push","listener","forEach","type","isElement","obj","nodeType","closest","element","$QSA","document","$QS","querySelector","getVm","toType","toString","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","message","render","data","countDownTimerId","dismissed","created","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","String","default","Boolean","dismissLabel","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","dismissCountDown","setInterval","active","activeClass","append","disabled","event","exact","exactActiveClass","href","rel","replace","routerTag","tag","target","to","linkProps","isRouterLink","$router","_href","computedRel","componentTag","linkClassObject","linkClick","e","stopPropagation","$root","preventDefault","mixins","linkMixin","bLinkPropKeys","components","bLink","normalizedItems","userDefinedActive","originalItemsLength","items","item","normalizedItem","_originalItem","isLast","text","link","_linkProps","itemProp","required","ariaCurrent","onClick","originalLinkProps","classList","btnVariant","btnSize","btnBlock","btnDisabled","componentType","block","size","btnType","conditionalLinkProps","ITEM_SELECTOR","justify","vertical","KeyNav","setItemFocus","$nextTick","focus","focusNext","prev","keyNav","getItems","indexOf","focusFirst","focusLast","$el","tabIndex","documentElement","_clickOutListener","destroyed","removeEventListener","contains","clickOutListener","HEADER_SELECTOR","ALL_SELECTOR","split","dropup","right","visible","$on","old","children","body","noop","toggle","getFirstItem","focusItem","onTab","onEsc","$refs","button","up","focusHovered","idx","add","remove","menu","clickOut","dropdown","dropdownToggle","caret","id","left","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","headerVariant","headerClass","headerTag","footer","footerVariant","footerClass","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","visibilityState","hidden","pause","_intervalId","start","slide","restart","relatedTarget","self","n","setAttribute","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","navbar-collapse","isNav","model","newVal","emitState","accordion","enter","style","realHeight","getComputedStyle","leave","clearHeight","openedId","bButton","toggleText","click","selected","displayItem","returnObject","forceDefault","defaultText","result","list","position","select","hub","inline","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","inputState","labelLayout","labelSrOnly","horizontal","labelSize","labelAlignClass","labelTextAlign","inputLayout","updateTarget","for","content","input","inputSelector","updated","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","formMixin","formCheckBoxMixin","uncheckedValue","checked","isChecked","handleChange","ref","isArray","x","formOptions","options","option","valueField","textField","selectedValue","localValue","old_value","formOptionsMixin","stacked","staticValue","formatter","Function","bFormInputStatic","rowsCount","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","readonly","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","reset","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","concat","files","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","hide","buttonSize","noFade","noCloseOnBackdrop","noCloseOnEsc","noAutoFocus","hideHeader","hideFooter","okOnly","okDisabled","hideHeaderClose","headerCloseLabel","closeTitle","okTitle","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","activeElement","triggerEl","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","toggleState","onclick","fixed","sticky","toggleable","toggleableClass","toggleBreakpoint","bForm","ELLIPSIS_THRESHOLD","showFirstDots","showLastDots","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageList","numLinks","limit","hideEllipsis","floor","pages","isActive","page","pageItemClasses","pageLinkClasses","setPage","num","currentpage","focusCurrent","getButtons","buttons","btn","setBtnFocus","reverse","parseInt","getAttribute","focusPrev","cnt","newPage","oldPage","newValue","oldValue","hideGotoEndButtons","ariaLabel","labelFirstPage","firstText","labelPrevPage","prevText","labelNextPage","nextText","labelLastPage","lastText","labelPage","ellipsisText","role","buttonRole","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","$data","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","parentElement","removeChild","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","recToString","exclude","_rowVariant","o","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","sortDesc","localItems","itemsProvider","fields","bordered","small","responsive","headVariant","footVariant","sortCompare","noProviderPaging","noProviderSorting","noProviderFiltering","busy","footClone","labelSortAsc","labelSortDesc","showEmpty","emptyText","emptyFilteredText","_providerUpdate","hasProvider","tableClass","headClass","footClass","providerFiltering","providerSorting","providerPaging","context","_items","regex","lastIndex","sort","r","fieldClass","field","key","sortable","class","thClass","tdClass","cellVariant","_cellVariants","rowClass","rowClicked","rowHovered","headClicked","sortChanged","refresh","_providerSetLocal","currentTab","card","lazy","setTab","fade","$set","navStyle","sign","nextTab","previousTab","force","tab","localActive","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","controlledBy","buttonId","headHtml","inBrowser","isServer","Element","s","matches","ownerDocument","NAME","EVENT","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","arg","listen","scroller","_getScroller","tagName","unListen","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","getBoundingClientRect","offsetTop","process","scrollTop","scrollHeight","maxScroll","_getOffsetHeight","_activate","_clear","isActiveTarget","dispose","handleEvent","resizeThrottle","pageYOffset","innerHeight","queries","links","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","unbind","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}